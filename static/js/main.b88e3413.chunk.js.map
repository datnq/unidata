{"version":3,"sources":["../../src/utils.ts","../../src/provider.tsx","../../src/useUnidata.tsx","counter.js","model/todos.js","addTodo.js","todoList.js","index.js","App.js"],"names":["getFilterFunction","filter","item","Object","k","UnidataContext","createContext","unidata","UnidataProvider","children","useState","useEffect","_","forceUpdate","initialData","initData","useCallback","value","newData","put","name","Array","dataSetter","add","d","remove","forced","Error","filterFn","update","i","v","data","subscribe","subscribed","WrappedComponent","props","useContext","changed","subscribedData","useUnidata","parentProps","deps","JSON","SubscribedComponent","todos","t","completed","length","CheckboxField","e","target","checked","this","setValue","Field","content","label","validators","test","required","errorMessage","minlen","type","inputRef","useRef","todo","useModel","todoModel","change","extractFromEvent","ref","onChange","onClick","preventDefault","isValid","clearData","error","message","index","parseInt","updated","map","id","key","AppContainer","App","setData","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b88e3413.chunk.js","sourcesContent":["export interface IFilterFn {\n  (item: string, index?: number, array?: Array<any>): boolean\n}\n\nexport const getFilterFunction = (filter: IFilterFn): IFilterFn =>\n  typeof filter === 'function'\n    ? filter\n    : (item: any) =>\n        Object.keys(filter).every(\n          (k) => item[k] !== undefined && filter[k] === item[k]\n        )\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect, useCallback, createContext } from 'react'\nimport _ from 'lodash'\nimport { getFilterFunction, IFilterFn } from './utils'\n\ninterface IUnidataContext {\n  dataSetter: {\n    put: (name: string, value: any) => void\n    add: (name: string, value: any) => void\n    remove: (name: string, filter: IFilterFn, force?: boolean) => void\n    update: (name: string, filter: IFilterFn, value: any) => void\n  }\n  data: object\n  initData: (value: any) => void\n}\n\ninterface IUnidataProviderProps {\n  initialData: object\n  setData: React.Dispatch<React.SetStateAction<object>>\n}\n\nexport const UnidataContext = createContext<Partial<IUnidataContext>>({})\n\nlet unidata = {}\nexport const UnidataProvider = ({\n  initialData,\n  children,\n}: React.PropsWithChildren<IUnidataProviderProps>) => {\n  const [, forceUpdate] = useState()\n\n  useEffect(() => {\n    if (!_.isEqual(unidata, initialData)) forceUpdate({ ...initialData })\n  }, [initialData])\n\n  const initData = useCallback(\n    (value) => {\n      const newData = { ...value, ...unidata }\n      if (!_.isEqual(Object.keys(newData), Object.keys(unidata))) {\n        unidata = { ...value, ...unidata }\n        forceUpdate({ ...unidata })\n      }\n    },\n    [unidata]\n  )\n\n  const put = (name: string, value: any): void => {\n    unidata[name] = Array.isArray(value) ? [...value] : value\n    forceUpdate({ ...unidata })\n  }\n\n  const dataSetter = {\n    put,\n    add: (name: string, value: any): void => {\n      const d = unidata[name]\n\n      if (!Array.isArray(d)) {\n        put(name, value)\n      } else {\n        put(name, [...d, value])\n      }\n    },\n    remove: (name: string, filter: IFilterFn, forced = false): void => {\n      if (!filter && !forced) {\n        throw new Error(\n          'Filter is required for remove data. Unless you pass force = true'\n        )\n      }\n\n      const d = unidata[name]\n      if (!Array.isArray(d) || forced) {\n        delete d[name]\n\n        put(name, d)\n      } else {\n        const filterFn = getFilterFunction(filter)\n\n        put(\n          name,\n          d.filter((item, index) => !filterFn(item, index))\n        )\n      }\n    },\n    update: (name: string, filter: IFilterFn, value: any): void => {\n      if (!filter) throw new Error('Filter is required for update data')\n\n      const d = unidata[name]\n\n      if (!Array.isArray(d) || typeof value !== 'object') {\n        put(name, value)\n      } else {\n        const filterFn = getFilterFunction(filter)\n        const doUpdate = (i: any, v: any) =>\n          typeof i === 'object' ? { ...i, ...v } : v\n\n        put(\n          name,\n          d.map((item, index) =>\n            filterFn(item, index) ? doUpdate(item, value) : item\n          )\n        )\n      }\n    },\n  }\n  return (\n    <UnidataContext.Provider value={{ data: unidata, dataSetter, initData }}>\n      {children}\n    </UnidataContext.Provider>\n  )\n}\n\nexport const withUnidata = (initialData: object | undefined) => (\n  App: React.ElementType\n) => (props: React.Props<any>) => {\n  const [data, setData] = useState(initialData || {})\n  return (\n    <UnidataProvider initialData={data} setData={setData}>\n      <App {...props} />\n    </UnidataProvider>\n  )\n}\n","import _ from 'lodash'\nimport React, { useContext, useEffect } from 'react'\nimport { UnidataContext } from './provider'\n\nexport const useUnidata = (subscribed: object) => {\n  const { dataSetter, data = {}, initData } = useContext(UnidataContext)\n\n  let changed = false\n  const subscribedData = _.mapValues(subscribed, (v, k) => {\n    if (data[k] !== undefined || data[k] === v) return data[k]\n    changed = true\n    return v\n  })\n\n  useEffect(() => {\n    if (changed && typeof initData === 'function') {\n      initData({ ...data, ...subscribedData })\n    }\n  }, [changed])\n\n  return [subscribedData, dataSetter]\n}\n\ninterface ISubscribedComponentProps {\n  deps: string\n}\n\nexport const subscribe = (subscribed: object) => (\n  WrappedComponent: React.ElementType\n) => (props: React.Props<any>) => {\n  const [data, dataSetter] = useUnidata(subscribed)\n  const parentProps = { ...props }\n  const deps = JSON.stringify(data)\n  const SubscribedComponent: React.FC<ISubscribedComponentProps> = () => (\n    <WrappedComponent data={data} dataSetter={dataSetter} {...parentProps} />\n  )\n  return React.useMemo(() => <SubscribedComponent deps={deps} />, [deps])\n}\n","import React from 'react'\nimport { subscribe } from '@datnq/unidata'\n\nconst Counter = ({ data }) => {\n  return (\n    <span>\n      Completed: {data.todos.filter(t => t.completed).length}/\n      {data.todos.length}\n    </span>\n  )\n}\n\nexport default subscribe({\n  todos: [],\n})(Counter)\n","import { required, minlen } from '@datnq/usemodel/lib/validators'\nimport { Field } from '@datnq/usemodel'\n\nclass CheckboxField extends Field {\n  extractFromEvent(e) {\n    const {\n      target: { value, checked },\n    } = e\n    this.setValue(checked ? value : null)\n  }\n}\n\nexport default () => {\n  return {\n    content: {\n      label: 'Todo Content',\n      validators: [\n        { test: required(), errorMessage: '%(label)s is required' },\n        {\n          test: minlen(6),\n          errorMessage: '%(label)s must be longer than 6 characters',\n        },\n      ],\n    },\n    completed: {\n      label: 'Completed',\n      type: CheckboxField,\n    },\n  }\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useRef } from 'react'\nimport { useModel } from '@datnq/usemodel'\nimport { subscribe } from '@datnq/unidata'\nimport todoModel from './model/todos'\n\nconst AddTodo = ({ dataSetter }) => {\n  const inputRef = useRef(null)\n  const todo = useModel(todoModel)\n  const { content, completed } = todo\n\n  const change = (e) => {\n    todo.extractFromEvent(e)\n  }\n\n  const addtodo = (e) => {\n    e.preventDefault()\n    if (!todo.isValid) return\n    dataSetter.add('todos', todo.data)\n    todo.clearData()\n  }\n\n  return (\n    <div>\n      <input\n        type='text'\n        ref={inputRef}\n        onChange={change}\n        name={content.name}\n        value={content.value}\n      />\n      <label>\n        <input\n          type='checkbox'\n          name={completed.name}\n          checked={completed.value === 'completed'}\n          value='completed'\n          onChange={change}\n        />{' '}\n        Completed\n      </label>\n      <button type='button' onClick={addtodo}>\n        Add todo\n      </button>\n      <br />\n      {content.isValid ? null : <p>{content.error.message}</p>}\n    </div>\n  )\n}\nexport default subscribe({\n  todos: [],\n})(AddTodo)\n","import React from 'react'\nimport { subscribe } from '@datnq/unidata'\n\nconst TodoList = ({ data, dataSetter }) => {\n  const { todos } = data\n\n  const change = (e) => {\n    const {\n      target: { checked, value },\n    } = e\n    const index = parseInt(value, 10)\n    const updated = todos[index]\n    todos[index] = { ...updated, completed: checked }\n    dataSetter.put(todos)\n  }\n\n  return (\n    <ol>\n      {todos.map((todo, id) => (\n        <li key={todo.content}>\n          <input\n            type='checkbox'\n            checked={todo.completed}\n            value={id}\n            onChange={change}\n          />\n          {todo.completed ? <s>{todo.content}</s> : todo.content}\n        </li>\n      ))}\n    </ol>\n  )\n}\nexport default subscribe({\n  todos: [],\n})(TodoList)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { withUnidata } from '@datnq/unidata'\n\nimport App from './App'\nimport './index.css'\n\nconst data = {}\nconst AppContainer = withUnidata(data)(App)\n\nReactDOM.render(<AppContainer />, document.getElementById('root'))\n","import React from 'react'\nimport Counter from './counter'\nimport AddTodo from './addTodo'\nimport TodoList from './todoList'\n\nexport default function App() {\n  return (\n    <>\n      <AddTodo />\n      <hr />\n      <Counter />\n      <TodoList />\n    </>\n  )\n}\n"],"sourceRoot":""}