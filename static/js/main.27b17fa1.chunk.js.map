{"version":3,"sources":["../../src/utils.ts","../../src/reducer.ts","../../src/provider.tsx","../../src/useUnidata.tsx","logger.js","counter.js","model/todos.js","addTodo.js","todoList.js","unrelatedCounter.js","App.js","index.js"],"names":["generateDataState","newData","shortid","getDisplayName","prefix","Component","initializer","initialData","data","state","reducer","unidata","updater","action","UnidataContext","createContext","store","dispatch","UnidataProvider","children","useReducer","value","subscribe","subscribed","WrappedComponent","MemoizedUnidataComponent","props","useContext","changedData","subscribedData","v","k","hasChanged","Object","subscribedState","useEffect","useUnidata","parentProps","SubscribedComponent","createLogger","content","logs","id","generate","map","log","key","Counter","this","todos","filter","t","completed","length","React","PureComponent","CheckboxField","e","target","checked","setValue","Field","label","validators","test","required","errorMessage","minlen","type","todo","useModel","todoModel","change","extractFromEvent","onChange","name","onClick","preventDefault","isValid","todoData","clearData","error","message","parseInt","counter","increase","useCallback","App","colStyles","padding","flexGrow","width","position","style","display","height","alignItems","href","right","top","src","alt","data-recalc-dims","color","backgroundColor","overflowY","boxShadow","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27b17fa1.chunk.js","sourcesContent":["import shortid from 'shortid'\nimport { mapValues } from 'lodash'\nimport { DataCollection, DataStateCollection } from './types'\n\nexport const generateDataState = (\n  newData: DataCollection\n): DataStateCollection =>\n  mapValues(newData, () => shortid.generate()) as DataStateCollection\n\nexport const getDisplayName = (\n  prefix: string,\n  Component: React.ElementType\n) => {\n  return `${prefix}${\n    (Component as React.FC).displayName ||\n    (Component as React.FC).name ||\n    'Component'\n  }`\n}\n","import { DataCollection, UnidataType, UnidataAction } from './types'\nimport { generateDataState } from './utils'\n\nexport const initializer = (initialData: DataCollection) => {\n  return { data: initialData, state: generateDataState(initialData) }\n}\n\nconst updater = (unidata: UnidataType, newData: DataCollection) => {\n  return {\n    data: {\n      ...unidata.data,\n      ...newData,\n    },\n    state: {\n      ...unidata.state,\n      ...generateDataState(newData),\n    },\n  }\n}\n\nexport const reducer = (\n  unidata: UnidataType,\n  action: UnidataAction\n): UnidataType => {\n  const updatedData = action(unidata.data)\n  return updater(unidata, updatedData)\n}\n","import React, { createContext, PropsWithChildren, useReducer } from 'react'\n\nimport { UnidataProviderProps, UnidataContextType } from './types'\nimport { reducer, initializer } from './reducer'\n\nexport const UnidataContext = createContext<UnidataContextType>({\n  store: {\n    data: {},\n    state: {},\n  },\n\n  dispatch: () => {},\n})\nUnidataContext.displayName = 'UnidataContext'\n\n/**\n * Wrapper of UnidataContext.Provider\n * @param {UnidataProviderProps} props\n */\nexport const UnidataProvider = ({\n  initialData,\n  children,\n}: PropsWithChildren<UnidataProviderProps>) => {\n  const [store, dispatch] = useReducer(reducer, initialData, initializer)\n\n  return (\n    <UnidataContext.Provider value={{ store, dispatch }}>\n      {children}\n    </UnidataContext.Provider>\n  )\n}\n","import { mapValues, values, pick } from 'lodash'\nimport React, { useContext, useEffect } from 'react'\nimport { UnidataContext } from './provider'\nimport {\n  SubscribedComponentProps,\n  DataCollection,\n  UnidataAction,\n} from './types'\nimport { getDisplayName } from './utils'\n\n/**\n * Hooks to return data the Component is listening to, state key, and data setter functions\n * @param {DataCollection} subscribed Data which the component want to subscribe to. { name: defaultValue }\n */\nexport const useUnidata = (\n  subscribed: DataCollection = {}\n): [DataCollection, React.Dispatch<UnidataAction>, string] => {\n  const { dispatch, store } = useContext(UnidataContext)\n  const { data, state } = store\n\n  const changedData: DataCollection = {}\n  const subscribedData = mapValues(subscribed, (v, k) => {\n    if (data[k] !== undefined || data[k] === v) return data[k]\n    changedData[k] = v\n    return v\n  })\n\n  const hasChanged = Object.keys(changedData).length > 0\n\n  const subscribedState = values(pick(state, Object.keys(subscribed))).join('-')\n\n  useEffect(() => {\n    if (hasChanged) {\n      dispatch(() => changedData)\n    }\n  }, [hasChanged, dispatch, changedData])\n\n  return [subscribedData, dispatch, subscribedState]\n}\n\n/**\n * Subscribe this component to specific data. Once those data change, Component will be rerender\n * @param {DataCollection} subscribed Data which the component want to subscribe to. { name: defaultValue }\n */\nexport const subscribe = (subscribed?: DataCollection) => (\n  WrappedComponent: React.ElementType\n) => {\n  const MemoizedUnidataComponent = (props: object): JSX.Element => {\n    const [data, dispatch, state] = useUnidata(subscribed || {})\n    const parentProps = { ...props }\n\n    const SubscribedComponent: React.ElementType<SubscribedComponentProps> = () => (\n      <WrappedComponent data={data} dispatch={dispatch} {...parentProps} />\n    )\n    SubscribedComponent.displayName = getDisplayName(\n      'UnidataSubscribed',\n      WrappedComponent\n    )\n    return React.useMemo(() => <SubscribedComponent state={state} />, [state])\n  }\n  MemoizedUnidataComponent.displayName = getDisplayName(\n    'UnidataMemoized',\n    WrappedComponent\n  )\n  return MemoizedUnidataComponent\n}\n","import React from 'react'\nimport { subscribe } from '@datnq/unidata'\nimport shortid from 'shortid'\n\nexport const createLogger = (dispatch) => (content) =>\n  dispatch(({ logs = [] }) => {\n    return {\n      logs: [...logs, { content, id: shortid.generate() }],\n    }\n  })\n\nexport default subscribe({ logs: [] })(({ data }) => {\n  const { logs = [] } = data\n  return (\n    logs && (\n      <ol>\n        {logs.map((log) => (\n          <li key={log.id}>{log.content}</li>\n        ))}\n      </ol>\n    )\n  )\n})\n","import React from 'react'\nimport { subscribe } from '@datnq/unidata'\nimport { createLogger } from './logger'\n\nclass Counter extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.log = createLogger(this.props.dispatch)\n  }\n  componentDidMount() {\n    this.log && this.log('Rendering Todo Counter')\n  }\n  render() {\n    const { data } = this.props\n    return (\n      <span>\n        Completed: {data.todos.filter((t) => t.completed).length}/\n        {data.todos.length}\n      </span>\n    )\n  }\n}\n\nexport default subscribe({\n  todos: [],\n})(Counter)\n","import { required, minlen } from '@datnq/usemodel/dist/validators.ts'\nimport { Field } from '@datnq/usemodel'\n\nclass CheckboxField extends Field {\n  extractFromEvent(e) {\n    const {\n      target: { value, checked },\n    } = e\n    this.setValue(checked ? value : null)\n  }\n}\n\nexport default () => {\n  return {\n    content: {\n      label: 'Todo Content',\n      validators: [\n        { test: required(), errorMessage: '%(label)s is required' },\n        {\n          test: minlen(6),\n          errorMessage: '%(label)s must be longer than 6 characters',\n        },\n      ],\n    },\n    completed: {\n      label: 'Completed',\n      type: CheckboxField,\n    },\n  }\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect } from 'react'\nimport { useModel } from '@datnq/usemodel'\nimport { subscribe } from '@datnq/unidata'\nimport todoModel from './model/todos'\nimport { createLogger } from './logger'\n\nconst AddTodo = ({ dispatch }) => {\n  const log = createLogger(dispatch)\n\n  const todo = useModel(todoModel)\n  const { content, completed } = todo\n\n  const change = (e) => {\n    todo.extractFromEvent(e)\n  }\n\n  const addtodo = (e) => {\n    e.preventDefault()\n    if (!todo.isValid) return\n\n    const todoData = todo.data\n    dispatch(({ todos }) => {\n      return {\n        todos: [...todos, todoData],\n      }\n    })\n    todo.clearData()\n  }\n\n  useEffect(() => {\n    log('Rendering Add Todo')\n  })\n\n  return (\n    <div>\n      <input\n        type='text'\n        onChange={change}\n        name={content.name}\n        value={content.value}\n      />\n      <label>\n        <input\n          type='checkbox'\n          name={completed.name}\n          checked={completed.value === 'completed'}\n          value='completed'\n          onChange={change}\n        />{' '}\n        Completed\n      </label>\n      <button type='button' onClick={addtodo}>\n        Add todo\n      </button>\n      <br />\n      {content.isValid ? null : <p>{content.error.message}</p>}\n    </div>\n  )\n}\nexport default subscribe()(AddTodo)\n","import React, { useEffect } from 'react'\nimport { subscribe } from '@datnq/unidata'\nimport { createLogger } from './logger'\n\nconst TodoList = ({ data, dispatch }) => {\n  const { todos } = data\n\n  const log = createLogger(dispatch)\n\n  const change = (e) => {\n    const {\n      target: { checked, value },\n    } = e\n\n    dispatch(({ todos }) => {\n      const index = parseInt(value, 10)\n      todos[index].completed = checked\n      return { todos }\n    })\n  }\n\n  useEffect(() => {\n    log('Rendering Todo list')\n  })\n\n  return (\n    <ol>\n      {todos.map((todo, id) => (\n        <li key={todo.content}>\n          <input\n            type='checkbox'\n            checked={todo.completed}\n            value={id}\n            onChange={change}\n          />\n          {todo.completed ? <s>{todo.content}</s> : todo.content}\n        </li>\n      ))}\n    </ol>\n  )\n}\nexport default subscribe({\n  todos: [],\n})(TodoList)\n","import React, { useCallback, useEffect } from 'react'\nimport { subscribe } from '@datnq/unidata'\nimport { createLogger } from './logger'\n\nexport default subscribe({ counter: 0 })(({ data, dispatch }) => {\n  const log = createLogger(dispatch)\n\n  const increase = useCallback(() => {\n    dispatch(({ counter }) => {\n      return {\n        counter: counter + 1,\n      }\n    })\n  }, [dispatch])\n\n  useEffect(() => {\n    log('Rendering Unrelated counter')\n  })\n\n  return (\n    <p>\n      <button type='button' onClick={increase}>\n        + Increase\n      </button>\n      {' ' + data.counter}\n    </p>\n  )\n})\n","import React from 'react'\nimport Counter from './counter'\nimport AddTodo from './addTodo'\nimport TodoList from './todoList'\nimport UnrelatedCounter from './unrelatedCounter'\nimport Logger from './logger'\n\nexport default function App() {\n  const colStyles = {\n    padding: '20px',\n    flexGrow: 1,\n    width: '50%',\n    position: 'relative',\n  }\n  return (\n    <>\n      <div style={{ display: 'flex', height: '100vh', alignItems: 'stretch' }}>\n        <div style={colStyles}>\n          <a\n            href='https://github.com/datnq/unidata'\n            style={{ position: 'absolute', right: 0, top: 0 }}\n          >\n            <img\n              width='149'\n              height='149'\n              src='https://github.blog/wp-content/uploads/2008/12/forkme_right_darkblue_121621.png?resize=149%2C149'\n              alt='Fork me on GitHub'\n              data-recalc-dims='1'\n            />\n          </a>\n          <AddTodo />\n          <hr />\n          <Counter />\n          <UnrelatedCounter />\n          <TodoList />\n        </div>\n        <div\n          style={{\n            ...colStyles,\n            color: '#fff',\n            backgroundColor: '#333',\n            overflowY: 'scroll',\n            boxShadow: 'inset 0 0 20px rgba(0,0,0,.4)',\n          }}\n        >\n          <h2>Rendering logger</h2>\n          <Logger />\n        </div>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { UnidataProvider } from '@datnq/unidata'\n\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <UnidataProvider initialData={{}}>\n    <App />\n  </UnidataProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}