{"version":3,"sources":["../../src/utils.ts","../../src/reducer.ts","../../src/provider.tsx","../../src/useUnidata.tsx","logger.js","counter.js","model/todos.js","addTodo.js","todoList.js","unrelatedCounter.js","App.js","index.js"],"names":["getFilterFunction","filter","item","Object","k","generateDataState","newData","shortid","getDisplayName","prefix","Component","initializer","initialData","data","state","updater","unidata","reducer","d","put","name","Array","value","Error","filterFn","i","v","UnidataContext","createContext","store","dispatch","UnidataProvider","children","useReducer","subscribe","subscribed","WrappedComponent","MemoizedUnidataComponent","props","useContext","changedData","subscribedData","subscribedState","dispatcher","type","add","update","remove","forced","useEffect","useUnidata","parentProps","deps","SubscribedComponent","createLogger","content","id","generate","logs","map","log","key","Counter","this","todos","t","completed","length","React","PureComponent","CheckboxField","e","target","checked","setValue","Field","label","validators","test","required","errorMessage","minlen","inputRef","useRef","todo","useModel","todoModel","change","extractFromEvent","ref","onChange","onClick","preventDefault","isValid","clearData","error","message","newTodos","index","parseInt","updated","counter","increase","useCallback","App","colStyles","padding","flexGrow","width","position","style","display","height","alignItems","href","right","top","src","class","alt","data-recalc-dims","color","backgroundColor","overflowY","boxShadow","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec49b58c.chunk.js","sourcesContent":["import shortid from 'shortid'\nimport { mapValues } from 'lodash'\nimport { FilterFn, DataCollection, DataStateCollection } from './types'\n\nexport const getFilterFunction = (filter: FilterFn): FilterFn =>\n  typeof filter === 'function'\n    ? filter\n    : (item: any) =>\n      Object.keys(filter).every(\n        (k) => item[k] !== undefined && filter[k] === item[k]\n      )\n\nexport const generateDataState = (newData: DataCollection): DataStateCollection =>\n  mapValues(newData, () => shortid.generate()) as DataStateCollection\n\nexport const getDisplayName = (\n  prefix: string,\n  Component: React.ElementType\n) => {\n  return `${prefix}${\n    (Component as React.FC).displayName ||\n    (Component as React.FC).name ||\n    'Component'\n    }`\n}\n","import { isEqual } from 'lodash'\nimport { DataCollection, UnidataType } from './types'\nimport { generateDataState, getFilterFunction } from './utils'\n\nexport const initializer = (initialData: DataCollection) => {\n  return { data: initialData, state: generateDataState(initialData) }\n}\n\nconst updater = (unidata: UnidataType, newData: DataCollection) => {\n  return {\n    data: {\n      ...unidata.data,\n      ...newData,\n    },\n    state: {\n      ...unidata.state,\n      ...generateDataState(newData),\n    },\n  }\n}\n\nexport const reducer = (unidata: UnidataType, action: any): UnidataType => {\n  const { type, name, value, filter, forced, data } = action\n  const d = unidata.data[name]\n  const newData = { ...data, ...unidata.data }\n\n  const put = (name: string, value: any) =>\n    !isEqual(unidata.data[name], value) || !unidata.state[name]\n      ? updater(unidata, { [name]: Array.isArray(value) ? [...value] : value })\n      : unidata\n\n  switch (type) {\n    case 'init':\n      return !isEqual(Object.keys(newData), Object.keys(unidata.data))\n        ? updater(unidata, newData)\n        : unidata\n    case 'put':\n      return put(name, value)\n    case 'add':\n      if (!Array.isArray(d)) {\n        return put(name, value)\n      } else {\n        return put(name, [...d, value])\n      }\n    case 'update':\n      if (!filter) throw new Error('Filter is required for update data')\n\n      if (!Array.isArray(d) || typeof value !== 'object') {\n        return put(name, value)\n      } else {\n        const filterFn = getFilterFunction(filter)\n        const doUpdate = (i: any, v: any) =>\n          typeof i === 'object' ? { ...i, ...v } : v\n\n        return put(\n          name,\n          d.map((item, index) =>\n            filterFn(item, index) ? doUpdate(item, value) : item\n          )\n        )\n      }\n    case 'remove':\n      if (!filter && !forced) {\n        throw new Error(\n          'Filter is required for remove data. Unless you pass force = true'\n        )\n      }\n\n      if (!Array.isArray(d) || forced) {\n        delete d[name]\n\n        return put(name, d)\n      } else {\n        const filterFn = getFilterFunction(filter)\n\n        return put(\n          name,\n          d.filter((item, index) => !filterFn(item, index))\n        )\n      }\n    default:\n      throw new Error()\n  }\n}\n","import React, { createContext, PropsWithChildren, useReducer } from 'react'\n\nimport { UnidataProviderProps, UnidataContextType } from './types'\nimport { reducer, initializer } from './reducer'\n\nexport const UnidataContext = createContext<UnidataContextType>({\n  store: {\n    data: {},\n    state: {},\n  },\n\n  dispatch: () => {},\n})\nUnidataContext.displayName = 'UnidataContext'\n\n/**\n * Wrapper of UnidataContext.Provider\n * @param {UnidataProviderProps} props\n */\nexport const UnidataProvider = ({\n  initialData,\n  children,\n}: PropsWithChildren<UnidataProviderProps>) => {\n  const [store, dispatch] = useReducer(reducer, initialData, initializer)\n\n  return (\n    <UnidataContext.Provider value={{ store, dispatch }}>\n      {children}\n    </UnidataContext.Provider>\n  )\n}\n","import { mapValues, values, pick } from 'lodash'\nimport React, { useContext, useEffect } from 'react'\nimport { UnidataContext } from './provider'\nimport {\n  SubscribedComponentProps,\n  DataCollection,\n  FilterFn,\n  UnidataType,\n  Dispatcher,\n} from './types'\nimport { getDisplayName } from './utils'\n\n/**\n * Hooks to return data the Component is listening to, state key, and data setter functions\n * @param {DataCollection} subscribed Data which the component want to subscribe to. { name: defaultValue }\n */\nexport const useUnidata = (\n  subscribed: DataCollection = {}\n): [UnidataType, Dispatcher] => {\n  const { dispatch, store } = useContext(UnidataContext)\n  const { data, state } = store\n\n  const changedData: DataCollection = {}\n  const subscribedData = mapValues(subscribed, (v, k) => {\n    if (data[k] !== undefined || data[k] === v) return data[k]\n    changedData[k] = v\n    return v\n  })\n\n  const subscribedState = pick(state, Object.keys(subscribed))\n\n  const unidata = {\n    data: subscribedData,\n    state: subscribedState,\n  }\n\n  const dispatcher = {\n    put: (name: string, value: any) => dispatch({ type: 'put', name, value }),\n    add: (name: string, value: any) => dispatch({ type: 'add', name, value }),\n    update: (name: string, filter: FilterFn, value: any) =>\n      dispatch({ type: 'update', name, value, filter }),\n    remove: (name: string, filter: FilterFn, forced = false) =>\n      dispatch({\n        type: 'remove',\n        filter,\n        name,\n        forced,\n      }),\n  }\n\n  useEffect(() => {\n    if (Object.keys(changedData)) {\n      dispatch({\n        type: 'init',\n        data: changedData,\n      })\n    }\n  }, [changedData, data, dispatch, subscribedData])\n\n  return [unidata, dispatcher]\n}\n\n/**\n * Subscribe this component to specific data. Once those data change, Component will be rerender\n * @param {DataCollection} subscribed Data which the component want to subscribe to. { name: defaultValue }\n */\nexport const subscribe = (subscribed?: DataCollection) => (\n  WrappedComponent: React.ElementType\n) => {\n  const MemoizedUnidataComponent = (props: object): JSX.Element => {\n    const [unidata, dispatcher] = useUnidata(subscribed || {})\n    const parentProps = { ...props }\n    const deps = values(unidata.state).join('-')\n\n    const SubscribedComponent: React.ElementType<SubscribedComponentProps> = () => (\n      <WrappedComponent\n        data={unidata.data}\n        dispatcher={dispatcher}\n        {...parentProps}\n      />\n    )\n    SubscribedComponent.displayName = getDisplayName(\n      'UnidataSubscribed',\n      WrappedComponent\n    )\n    return React.useMemo(() => <SubscribedComponent deps={deps} />, [deps])\n  }\n  MemoizedUnidataComponent.displayName = getDisplayName(\n    'UnidataMemoized',\n    WrappedComponent\n  )\n  return MemoizedUnidataComponent\n}\n","import React from 'react'\nimport { subscribe } from '@datnq/unidata'\nimport shortid from 'shortid'\n\nexport const createLogger = (dispatcher) => (content) => {\n  dispatcher.add('logs', { content, id: shortid.generate() })\n}\n\nexport default subscribe({ logs: [] })(({ data }) => {\n  const { logs } = data\n  return (\n    logs &&\n    logs.map((log, i) => (\n      <p key={log.id}>\n        {i + 1}. {log.content}\n      </p>\n    ))\n  )\n})\n","import React from 'react'\nimport { subscribe } from '@datnq/unidata'\nimport { createLogger } from './logger'\n\nclass Counter extends React.PureComponent {\n  componentDidUpdate() {\n    this.log = createLogger(this.props.dispatcher)\n  }\n  render() {\n    this.log && this.log('Rendering Todo Counter')\n    const { data } = this.props\n    return (\n      <span>\n        Completed: {data.todos.filter((t) => t.completed).length}/\n        {data.todos.length}\n      </span>\n    )\n  }\n}\n\nexport default subscribe({\n  todos: [],\n})(Counter)\n","import { required, minlen } from '@datnq/usemodel/dist/validators.ts'\nimport { Field } from '@datnq/usemodel'\n\nclass CheckboxField extends Field {\n  extractFromEvent(e) {\n    const {\n      target: { value, checked },\n    } = e\n    this.setValue(checked ? value : null)\n  }\n}\n\nexport default () => {\n  return {\n    content: {\n      label: 'Todo Content',\n      validators: [\n        { test: required(), errorMessage: '%(label)s is required' },\n        {\n          test: minlen(6),\n          errorMessage: '%(label)s must be longer than 6 characters',\n        },\n      ],\n    },\n    completed: {\n      label: 'Completed',\n      type: CheckboxField,\n    },\n  }\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useRef, useEffect } from 'react'\nimport { useModel } from '@datnq/usemodel'\nimport { subscribe } from '@datnq/unidata'\nimport todoModel from './model/todos'\nimport { createLogger } from './logger'\n\nconst AddTodo = ({ dispatcher }) => {\n  const log = createLogger(dispatcher)\n\n  const inputRef = useRef(null)\n  const todo = useModel(todoModel)\n  const { content, completed } = todo\n\n  const change = (e) => {\n    todo.extractFromEvent(e)\n  }\n\n  const addtodo = (e) => {\n    e.preventDefault()\n    if (!todo.isValid) return\n    dispatcher.add('todos', todo.data)\n    todo.clearData()\n  }\n\n  useEffect(() => {\n    log('Rendering Add Todo')\n  })\n\n  return (\n    <div>\n      <input\n        type='text'\n        ref={inputRef}\n        onChange={change}\n        name={content.name}\n        value={content.value}\n      />\n      <label>\n        <input\n          type='checkbox'\n          name={completed.name}\n          checked={completed.value === 'completed'}\n          value='completed'\n          onChange={change}\n        />{' '}\n        Completed\n      </label>\n      <button type='button' onClick={addtodo}>\n        Add todo\n      </button>\n      <br />\n      {content.isValid ? null : <p>{content.error.message}</p>}\n    </div>\n  )\n}\nexport default subscribe()(AddTodo)\n","import React, { useEffect } from 'react'\nimport { subscribe } from '@datnq/unidata'\nimport { createLogger } from './logger'\n\nconst TodoList = ({ data, dispatcher }) => {\n  const { todos } = data\n\n  const log = createLogger(dispatcher)\n\n  const change = (e) => {\n    const {\n      target: { checked, value },\n    } = e\n    const newTodos = [...todos]\n    const index = parseInt(value, 10)\n    const updated = todos[index]\n    newTodos[index] = { ...updated, completed: checked }\n    dispatcher.put('todos', newTodos)\n  }\n\n  useEffect(() => {\n    log('Rendering Todo list')\n  })\n\n  return (\n    <ol>\n      {todos.map((todo, id) => (\n        <li key={todo.content}>\n          <input\n            type='checkbox'\n            checked={todo.completed}\n            value={id}\n            onChange={change}\n          />\n          {todo.completed ? <s>{todo.content}</s> : todo.content}\n        </li>\n      ))}\n    </ol>\n  )\n}\nexport default subscribe({\n  todos: [],\n})(TodoList)\n","import React, { useCallback, useEffect } from 'react'\nimport { subscribe } from '@datnq/unidata'\nimport { createLogger } from './logger'\n\nexport default subscribe({ counter: 0 })(({ data, dispatcher }) => {\n  const log = createLogger(dispatcher)\n\n  const increase = useCallback(() => {\n    dispatcher.put('counter', data.counter + 1)\n  }, [data.counter, dispatcher])\n\n  useEffect(() => {\n    log('Rendering Unrelated counter')\n  })\n\n  return (\n    <p>\n      {data.counter}{' '}\n      <button type='button' onClick={increase}>\n        + Increase\n      </button>\n    </p>\n  )\n})\n","import React from 'react'\nimport Counter from './counter'\nimport AddTodo from './addTodo'\nimport TodoList from './todoList'\nimport UnrelatedCounter from './unrelatedCounter'\nimport Logger from './logger'\n\nexport default function App() {\n  const colStyles = {\n    padding: '20px',\n    flexGrow: 1,\n    width: '50%',\n    position: 'relative',\n  }\n  return (\n    <>\n      <div style={{ display: 'flex', height: '100vh', alignItems: 'stretch' }}>\n        <div style={colStyles}>\n          <a\n            href='https://github.com/you'\n            style={{ position: 'absolute', right: 0, top: 0 }}\n          >\n            <img\n              width='149'\n              height='149'\n              src='https://github.blog/wp-content/uploads/2008/12/forkme_right_darkblue_121621.png?resize=149%2C149'\n              class='attachment-full size-full'\n              alt='Fork me on GitHub'\n              data-recalc-dims='1'\n            />\n          </a>\n          <AddTodo />\n          <hr />\n          <Counter />\n          <UnrelatedCounter />\n          <TodoList />\n        </div>\n        <div\n          style={{\n            ...colStyles,\n            color: '#fff',\n            backgroundColor: '#333',\n            overflowY: 'scroll',\n            boxShadow: 'inset 0 0 20px rgba(0,0,0,.4)',\n          }}\n        >\n          <h2>Rendering logger</h2>\n          <Logger />\n        </div>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { UnidataProvider } from '@datnq/unidata'\n\nimport App from './App'\nimport './index.css'\n\nconst data = {\n  logs: [],\n}\n\nReactDOM.render(\n  <UnidataProvider initialData={data}>\n    <App />\n  </UnidataProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}