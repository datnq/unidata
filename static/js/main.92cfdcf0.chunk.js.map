{"version":3,"sources":["../../src/utils.ts","../../src/reducer.ts","../../src/provider.tsx","../../src/useUnidata.tsx","logger.js","counter.js","model/todos.js","addTodo.js","todoList.js","unrelatedCounter.js","App.js","index.js"],"names":["generateDataState","newData","shortid","getDisplayName","prefix","Component","initializer","initialData","data","state","reducer","unidata","updater","action","UnidataContext","createContext","store","dispatch","UnidataProvider","children","useReducer","value","subscribe","subscribed","WrappedComponent","MemoizedUnidataComponent","props","useContext","useMemo","changedData","subscribedData","subscribedState","Object","hasChanged","useEffect","useUnidata","parentProps","SubscribedComponent","createLogger","content","logs","id","generate","time","Date","lastContent","writtenLogs","forEach","l","i","push","count","currentContent","length","map","log","key","toLocaleTimeString","Counter","this","todos","filter","t","completed","React","PureComponent","CheckboxField","e","target","checked","setValue","Field","label","validators","test","required","errorMessage","minlen","type","todo","useModel","todoModel","change","extractFromEvent","onChange","name","onClick","preventDefault","isValid","todoData","clearData","error","message","parseInt","counter","increase","useCallback","App","colStyles","padding","flexGrow","width","position","style","display","height","alignItems","href","right","top","src","alt","data-recalc-dims","color","backgroundColor","overflowY","boxShadow","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92cfdcf0.chunk.js","sourcesContent":["import shortid from 'shortid'\nimport { mapValues } from 'lodash'\nimport { DataCollection, DataStateCollection } from './types'\n\nexport const generateDataState = (\n  newData: DataCollection\n): DataStateCollection =>\n  mapValues(newData, () => shortid.generate()) as DataStateCollection\n\nexport const getDisplayName = (\n  prefix: string,\n  Component: React.ElementType\n) => {\n  return `${prefix}${\n    (Component as React.FC).displayName ||\n    (Component as React.FC).name ||\n    'Component'\n  }`\n}\n","import { DataCollection, UnidataType, UnidataAction } from './types'\nimport { generateDataState } from './utils'\n\nexport const initializer = (initialData: DataCollection) => {\n  return { data: initialData, state: generateDataState(initialData) }\n}\n\nconst updater = (unidata: UnidataType, newData: DataCollection) => {\n  return {\n    data: {\n      ...unidata.data,\n      ...newData,\n    },\n    state: {\n      ...unidata.state,\n      ...generateDataState(newData),\n    },\n  }\n}\n\nexport const reducer = (\n  unidata: UnidataType,\n  action: UnidataAction\n): UnidataType => {\n  const updatedData = action(unidata.data)\n  return updater(unidata, updatedData)\n}\n","import React, { createContext, PropsWithChildren, useReducer } from 'react'\n\nimport { UnidataProviderProps, UnidataContextType } from './types'\nimport { reducer, initializer } from './reducer'\n\nexport const UnidataContext = createContext<UnidataContextType>({\n  store: {\n    data: {},\n    state: {},\n  },\n\n  dispatch: () => {},\n})\nUnidataContext.displayName = 'UnidataContext'\n\n/**\n * Wrapper of UnidataContext.Provider\n * @param {UnidataProviderProps} props\n */\nexport const UnidataProvider = ({\n  initialData,\n  children,\n}: PropsWithChildren<UnidataProviderProps>) => {\n  const [store, dispatch] = useReducer(reducer, initialData, initializer)\n\n  return (\n    <UnidataContext.Provider value={{ store, dispatch }}>\n      {children}\n    </UnidataContext.Provider>\n  )\n}\n","import { mapValues, values, pick } from 'lodash'\nimport React, { useContext, useEffect, useMemo } from 'react'\nimport { UnidataContext } from './provider'\nimport {\n  SubscribedComponentProps,\n  DataCollection,\n  UnidataAction,\n} from './types'\nimport { getDisplayName } from './utils'\n\n/**\n * Hooks to return data the Component is listening to, state key, and data setter functions\n * @param {DataCollection} subscribed Data which the component want to subscribe to. { name: defaultValue }\n */\nexport const useUnidata = (\n  subscribed: DataCollection = {}\n): [DataCollection, React.Dispatch<UnidataAction>, string] => {\n  const { dispatch, store } = useContext(UnidataContext)\n  const { data, state } = store\n\n  const [changedData, subscribedData, subscribedState] = useMemo(() => {\n    const changedData: DataCollection = {}\n    const subscribedData = mapValues(subscribed, (v, k) => {\n      if (data[k] !== undefined || data[k] === v) return data[k]\n      changedData[k] = v\n      return v\n    })\n    const subscribedState = values(pick(state, Object.keys(subscribed))).join(\n      '-'\n    )\n    return [changedData, subscribedData, subscribedState]\n  }, [data, state, subscribed])\n\n  const hasChanged = Object.keys(changedData).length > 0\n\n  useEffect(() => {\n    if (hasChanged) {\n      dispatch(() => changedData)\n    }\n  }, [hasChanged, dispatch, changedData])\n\n  return [subscribedData, dispatch, subscribedState]\n}\n\n/**\n * Subscribe this component to specific data. Once those data change, Component will be rerender\n * @param {DataCollection} subscribed Data which the component want to subscribe to. { name: defaultValue }\n */\nexport const subscribe = (subscribed?: DataCollection) => (\n  WrappedComponent: React.ElementType\n) => {\n  const MemoizedUnidataComponent = (props: object): JSX.Element => {\n    const [data, dispatch, state] = useUnidata(subscribed || {})\n    const parentProps = { ...props }\n\n    const SubscribedComponent: React.ElementType<SubscribedComponentProps> = () => (\n      <WrappedComponent data={data} dispatch={dispatch} {...parentProps} />\n    )\n    SubscribedComponent.displayName = getDisplayName(\n      'UnidataSubscribed',\n      WrappedComponent\n    )\n    return React.useMemo(() => <SubscribedComponent state={state} />, [state])\n  }\n  MemoizedUnidataComponent.displayName = getDisplayName(\n    'UnidataMemoized',\n    WrappedComponent\n  )\n  return MemoizedUnidataComponent\n}\n","import React from 'react'\r\nimport { subscribe } from '@datnq/unidata'\r\nimport shortid from 'shortid'\r\n\r\nexport const createLogger = (dispatch) => (content) =>\r\n  dispatch(({ logs = [] }) => {\r\n    return {\r\n      logs: [...logs, { content, id: shortid.generate(), time: new Date() }],\r\n    }\r\n  })\r\n\r\nexport default subscribe({ logs: [] })(({ data }) => {\r\n  const { logs = [] } = data\r\n\r\n  const writtenLogs = []\r\n  let lastContent\r\n\r\n  logs.forEach((l, i) => {\r\n    if (i === 0) {\r\n      writtenLogs.push({ ...l, count: 1 })\r\n      lastContent = l.content\r\n      return\r\n    }\r\n    const currentContent = l.content\r\n    if (lastContent && currentContent === lastContent) {\r\n      writtenLogs[writtenLogs.length - 1].count += 1\r\n      writtenLogs[writtenLogs.length - 1].time = new Date()\r\n    } else {\r\n      writtenLogs.push({ ...l, count: 1 })\r\n      lastContent = currentContent\r\n    }\r\n  })\r\n\r\n  return (\r\n    writtenLogs && (\r\n      <div>\r\n        {writtenLogs.map((log) => (\r\n          <p key={log.id}>\r\n            <code>{log.time.toLocaleTimeString()}</code> &ndash; {log.content}\r\n            {log.count > 1 ? ` (${log.count})` : ''}\r\n          </p>\r\n        ))}\r\n      </div>\r\n    )\r\n  )\r\n})\r\n","import React from 'react'\r\nimport { subscribe } from '@datnq/unidata'\r\nimport { createLogger } from './logger'\r\n\r\nclass Counter extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props)\r\n    this.log = createLogger(this.props.dispatch)\r\n  }\r\n  componentDidMount() {\r\n    this.log && this.log('Rendering Todo Counter')\r\n  }\r\n  render() {\r\n    const { data } = this.props\r\n    return (\r\n      <span>\r\n        Completed: {data.todos.filter((t) => t.completed).length}/\r\n        {data.todos.length}\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nexport default subscribe({\r\n  todos: [],\r\n})(Counter)\r\n","import { required, minlen } from '@datnq/usemodel/dist/validators.ts'\r\nimport { Field } from '@datnq/usemodel'\r\n\r\nclass CheckboxField extends Field {\r\n  extractFromEvent(e) {\r\n    const {\r\n      target: { value, checked },\r\n    } = e\r\n    this.setValue(checked ? value : null)\r\n  }\r\n}\r\n\r\nexport default () => {\r\n  return {\r\n    content: {\r\n      label: 'Todo Content',\r\n      validators: [\r\n        { test: required(), errorMessage: '%(label)s is required' },\r\n        {\r\n          test: minlen(6),\r\n          errorMessage: '%(label)s must be longer than 6 characters',\r\n        },\r\n      ],\r\n    },\r\n    completed: {\r\n      label: 'Completed',\r\n      type: CheckboxField,\r\n    },\r\n  }\r\n}\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useEffect } from 'react'\r\nimport { useModel } from '@datnq/usemodel'\r\nimport { subscribe } from '@datnq/unidata'\r\nimport todoModel from './model/todos'\r\nimport { createLogger } from './logger'\r\n\r\nconst AddTodo = ({ dispatch }) => {\r\n  const log = createLogger(dispatch)\r\n\r\n  const todo = useModel(todoModel)\r\n  const { content, completed } = todo\r\n\r\n  const change = (e) => {\r\n    todo.extractFromEvent(e)\r\n  }\r\n\r\n  const addtodo = (e) => {\r\n    e.preventDefault()\r\n    if (!todo.isValid) return\r\n\r\n    const todoData = todo.data\r\n    dispatch(({ todos }) => {\r\n      return {\r\n        todos: [...todos, todoData],\r\n      }\r\n    })\r\n    todo.clearData()\r\n  }\r\n\r\n  useEffect(() => {\r\n    log('Rendering Add Todo')\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type='text'\r\n        onChange={change}\r\n        name={content.name}\r\n        value={content.value}\r\n      />\r\n      <label>\r\n        <input\r\n          type='checkbox'\r\n          name={completed.name}\r\n          checked={completed.value === 'completed'}\r\n          value='completed'\r\n          onChange={change}\r\n        />{' '}\r\n        Completed\r\n      </label>\r\n      <button type='button' onClick={addtodo}>\r\n        Add todo\r\n      </button>\r\n      <br />\r\n      {content.isValid ? null : <p>{content.error.message}</p>}\r\n    </div>\r\n  )\r\n}\r\nexport default subscribe()(AddTodo)\r\n","import React, { useEffect } from 'react'\r\nimport { subscribe } from '@datnq/unidata'\r\nimport { createLogger } from './logger'\r\n\r\nconst TodoList = ({ data, dispatch }) => {\r\n  const { todos } = data\r\n\r\n  const log = createLogger(dispatch)\r\n\r\n  const change = (e) => {\r\n    const {\r\n      target: { checked, value },\r\n    } = e\r\n\r\n    dispatch(({ todos, logs }) => {\r\n      const index = parseInt(value, 10)\r\n      todos[index].completed = checked\r\n      return { todos }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    log('Rendering Todo list')\r\n  })\r\n\r\n  return (\r\n    <ol>\r\n      {todos.map((todo, id) => (\r\n        <li key={todo.content}>\r\n          <input\r\n            type='checkbox'\r\n            checked={todo.completed}\r\n            value={id}\r\n            onChange={change}\r\n          />\r\n          {todo.completed ? <s>{todo.content}</s> : todo.content}\r\n        </li>\r\n      ))}\r\n    </ol>\r\n  )\r\n}\r\nexport default subscribe({\r\n  todos: [],\r\n})(TodoList)\r\n","import React, { useCallback, useEffect } from 'react'\r\nimport { subscribe } from '@datnq/unidata'\r\nimport { createLogger } from './logger'\r\n\r\nexport default subscribe({ counter: 0 })(({ data, dispatch }) => {\r\n  const log = createLogger(dispatch)\r\n\r\n  const increase = useCallback(() => {\r\n    dispatch(({ counter }) => {\r\n      return {\r\n        counter: counter + 1,\r\n      }\r\n    })\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    log('Rendering Unrelated counter')\r\n  })\r\n\r\n  return (\r\n    <p>\r\n      <button type='button' onClick={increase}>\r\n        + Increase\r\n      </button>\r\n      {' ' + data.counter}\r\n    </p>\r\n  )\r\n})\r\n","import React from 'react'\r\nimport Counter from './counter'\r\nimport AddTodo from './addTodo'\r\nimport TodoList from './todoList'\r\nimport UnrelatedCounter from './unrelatedCounter'\r\nimport Logger from './logger'\r\n\r\nexport default function App() {\r\n  const colStyles = {\r\n    padding: '20px',\r\n    flexGrow: 1,\r\n    width: '50%',\r\n    position: 'relative',\r\n  }\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex', height: '100vh', alignItems: 'stretch' }}>\r\n        <div style={colStyles}>\r\n          <a\r\n            href='https://github.com/datnq/unidata'\r\n            style={{ position: 'absolute', right: 0, top: 0 }}\r\n          >\r\n            <img\r\n              width='149'\r\n              height='149'\r\n              src='https://github.blog/wp-content/uploads/2008/12/forkme_right_darkblue_121621.png?resize=149%2C149'\r\n              alt='Fork me on GitHub'\r\n              data-recalc-dims='1'\r\n            />\r\n          </a>\r\n          <AddTodo />\r\n          <hr />\r\n          <Counter />\r\n          <UnrelatedCounter />\r\n          <TodoList />\r\n        </div>\r\n        <div\r\n          style={{\r\n            ...colStyles,\r\n            color: '#fff',\r\n            backgroundColor: '#333',\r\n            overflowY: 'scroll',\r\n            boxShadow: 'inset 0 0 20px rgba(0,0,0,.4)',\r\n          }}\r\n        >\r\n          <h2>Rendering logger</h2>\r\n          <Logger />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { UnidataProvider } from '@datnq/unidata'\r\n\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <UnidataProvider initialData={{}}>\r\n    <App />\r\n  </UnidataProvider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}