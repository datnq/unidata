{"version":3,"sources":["../../src/utils.ts","../../src/provider.tsx","../../src/useUnidata.tsx","counter.js","model/todos.js","addTodo.js","todoList.js","index.js","App.js"],"names":["getFilterFunction","filter","Object","item","UnidataContext","createContext","unidata","dataState","UnidataProvider","initialData","children","forceUpdate","useState","updateDataState","newData","currentState","mapValues","shortid","generateDataState","useEffect","isEqual","initData","useCallback","put","name","Array","dataSetter","add","d","remove","forced","Error","filterFn","update","value","i","data","subscribe","subscribed","useContext","changed","subscribedData","subscribedState","pick","useUnidata","parentProps","deps","values","SubscribedComponent","React","todos","console","log","t","completed","length","CheckboxField","e","target","checked","this","setValue","Field","content","label","validators","test","required","errorMessage","minlen","type","inputRef","useRef","todo","useModel","todoModel","change","extractFromEvent","ref","onChange","onClick","preventDefault","isValid","clearData","error","message","index","parseInt","updated","map","id","key","AppContainer","setData","ReactDOM","render","document","getElementById"],"mappings":"8eAIO,IAAMA,EAAoB,SAACC,GAAD,MACb,oBAAXA,EAAP,EAEI,mBACEC,OAAA,eACE,wBAAOC,UAAyBF,OAAcE,EAA9C,QCHGC,EAAiBC,wBAAvB,IAEHC,EAAJ,GACIC,EAAJ,GAEaC,EAAkB,SAAC,G,IAC9BC,gBACAC,aAESC,EAAeC,qBAAfD,GAEHE,EAAkB,SAACC,GACvBP,EDN6B,SAACQ,EAAD,GAC/B,iBAEKC,IAAUF,GAAS,kBAAMG,IAAN,eCGVC,CAAkB,EAA9BX,GACAI,MAGFQ,qBAAU,WACHC,IAAQd,EAAb,IACEO,OAED,CAJHM,IAMA,IAAME,EAAWC,uBACf,YACE,IAAMR,EAAU,EAAH,QAAb,GACKM,IAAQlB,YAAD,GAAuBA,YAAnC,MACEI,EAAU,EAAH,QAAPA,GACAO,QAGJ,CARF,IAWMU,EAAM,SAACC,EAAD,G,MACVlB,KAAgBmB,8BAAhBnB,EACAO,IAAe,WAAfA,KAGIa,EAAa,CACjBH,IADiB,EAEjBI,IAAK,cACH,IAAMC,EAAItB,EAAV,GAEKmB,cAAL,GAGEF,EAAIC,EAAM,GAAP,UAAHD,KAFAA,EAAIC,EAAJD,IAKJM,OAAQ,gBACN,QADwCC,WAAS,IAC5C7B,IAAL,EACE,MAAM,IAAI8B,MAAV,oEAKF,IAAMH,EAAItB,EAAV,GACA,IAAKmB,cAAD,IAAJ,SACSG,EAAP,GAEAL,EAAIC,EAAJD,OACK,CACL,IAAMS,EAAWhC,EAAjB,GAEAuB,EAAI,EAEFK,EAAA,QAAS,qBAAkBI,EAAS7B,EAA3B,SAIf8B,OAAQ,gBACN,MAAa,MAAM,IAAIF,MAAV,sCAEb,IAAMH,EAAItB,EAAV,GAEA,GAAKmB,cAAD,IAAJ,kBAAgCS,EAEzB,CACL,IAAMF,EAAWhC,EAAjB,GAIAuB,EAAI,EAEFK,EAAA,KAAM,qBACJI,EAAS7B,EAAT6B,IANa,EAMbA,EALW,kBADGG,EAMmBhC,GALX,EAAxB,WADe,GAKT,EALS,IAACgC,EAAD,WAHjBZ,EAAIC,EAAJD,KAeN,OACE,kBAACnB,EAAD,UACE8B,MAAO,CAAEE,KAAF,EAAiB7B,UAAjB,EAA4BmB,WAA5B,EAAwCL,aAFnD,ICnEWgB,EAAY,SAACC,GAAD,OAAyB,mBAE7C,Y,MAzBqB,SAACA,G,MACmCC,qBAAW,GAA/Db,e,IAAYnB,qBAAYA,EAAA,K,IAAI6B,gBAAOA,EAAA,KAAIf,aAI3CmB,GAAJ,EACMC,EAAiBzB,IAAUsB,GAAY,cAC3C,YAAIF,UAAyBA,OAA7B,EAAmDA,EAAP,IAC5CI,KACA,MAGIE,EAAkBC,IAAKpC,EAAWL,YAAxC,IAQA,OANAiB,qBAAU,WACJqB,GAAJ,oBAAsBnB,GACpBA,EAAS,EAAD,QAARA,MAED,CAJHF,IAMO,CAACsB,EAAgBf,EAAxB,GAM4CkB,CAAWN,GAAD,IAA/CF,OAAMV,OAAYgB,OACnBG,EAAc,EAAH,GAAjB,GACMC,EAAOC,YAAb,KAEMC,EAAoE,kBACxEC,mCAAkBb,KAAMA,EAAMV,WAAYA,GAD8B,KAG1E,OAAO,aAAc,kBAAM,qBAAqBoB,KAAMA,MAAU,CAAhE,OC3BaT,IAAU,CACvBa,MAAO,IADMb,EAVC,SAAC,GAAc,IAAZD,EAAW,EAAXA,KAEjB,OADAe,QAAQC,IAAI,oBAEV,4CACchB,EAAKc,MAAMjD,QAAO,SAACoD,GAAD,OAAOA,EAAEC,aAAWC,OADpD,IAEGnB,EAAKc,MAAMK,W,gDCLZC,E,+KACaC,GAAI,IAAD,EAGdA,EADFC,OAAUxB,EAFM,EAENA,MAAOyB,EAFD,EAECA,QAEnBC,KAAKC,SAASF,EAAUzB,EAAQ,U,GALR4B,KASb,aACb,MAAO,CACLC,QAAS,CACPC,MAAO,eACPC,WAAY,CACV,CAAEC,KAAMC,qBAAYC,aAAc,yBAClC,CACEF,KAAMG,iBAAO,GACbD,aAAc,gDAIpBd,UAAW,CACTU,MAAO,YACPM,KAAMd,KCyBGnB,OA7CC,SAAC,GAAoB,IAAlBX,EAAiB,EAAjBA,WACX6C,EAAWC,iBAAO,MAClBC,EAAOC,YAASC,GACdZ,EAAuBU,EAAvBV,QAAST,EAAcmB,EAAdnB,UAEXsB,EAAS,SAACnB,GACdgB,EAAKI,iBAAiBpB,IAYxB,OAFAN,QAAQC,IAAI,qBAGV,6BACE,2BACEkB,KAAK,OACLQ,IAAKP,EACLQ,SAAUH,EACVpD,KAAMuC,EAAQvC,KACdU,MAAO6B,EAAQ7B,QAEjB,+BACE,2BACEoC,KAAK,WACL9C,KAAM8B,EAAU9B,KAChBmC,QAA6B,cAApBL,EAAUpB,MACnBA,MAAM,YACN6C,SAAUH,IACT,IAPL,aAUA,4BAAQN,KAAK,SAASU,QA5BV,SAACvB,GACfA,EAAEwB,iBACGR,EAAKS,UACVxD,EAAWC,IAAI,QAAS8C,EAAKrC,MAC7BqC,EAAKU,eAwBH,YAGA,6BACCpB,EAAQmB,QAAU,KAAO,2BAAInB,EAAQqB,MAAMC,a,QCbnChD,IAAU,CACvBa,MAAO,IADMb,EA/BE,SAAC,GAA0B,IAAxBD,EAAuB,EAAvBA,KAAMV,EAAiB,EAAjBA,WAChBwB,EAAUd,EAAVc,MAEF0B,EAAS,SAACnB,GAAO,IAAD,EAGhBA,EADFC,OAAUC,EAFQ,EAERA,QAASzB,EAFD,EAECA,MAEfoD,EAAQC,SAASrD,EAAO,IACxBsD,EAAUtC,EAAMoC,GACtBpC,EAAMoC,GAAN,eAAoBE,EAApB,CAA6BlC,UAAWK,IACxCjC,EAAWH,IAAI,QAAS2B,IAK1B,OAFAC,QAAQC,IAAI,sBAGV,4BACGF,EAAMuC,KAAI,SAAChB,EAAMiB,GAAP,OACT,wBAAIC,IAAKlB,EAAKV,SACZ,2BACEO,KAAK,WACLX,QAASc,EAAKnB,UACdpB,MAAOwD,EACPX,SAAUH,IAEXH,EAAKnB,UAAY,2BAAImB,EAAKV,SAAeU,EAAKV,gB,WL8E7BtD,EMlGtBmF,GNkGsBnF,EMnGf,GNmGmD,mBAE3D,Y,MACqBG,mBAASH,GAAD,IAAzB2B,OAAMyD,OACb,OACE,qBAAiBpF,YAAa2B,EAAMyD,QAASA,GAC3C5C,qCAFJ,SOzGa,WACb,OACE,oCACE,kBAAC,EAAD,MACA,6BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,UDDN6C,IAASC,OAAO,kBAACH,EAAD,MAAkBI,SAASC,eAAe,U","file":"static/js/main.86ea03a0.chunk.js","sourcesContent":["import shortid from 'shortid'\nimport mapValues from 'lodash/mapValues'\nimport { IFilterFn } from './types'\n\nexport const getFilterFunction = (filter: IFilterFn): IFilterFn =>\n  typeof filter === 'function'\n    ? filter\n    : (item: any) =>\n        Object.keys(filter).every(\n          (k) => item[k] !== undefined && filter[k] === item[k]\n        )\n\nexport const generateDataState = (currentState: object, newData: object) => {\n  return {\n    ...currentState,\n    ...mapValues(newData, () => shortid.generate()),\n  }\n}\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect, useCallback, createContext } from 'react'\nimport isEqual from 'lodash/isEqual'\nimport { getFilterFunction, generateDataState } from './utils'\nimport { IUnidataProviderProps, IFilterFn, IUnidataContext } from './types'\n\nexport const UnidataContext = createContext<Partial<IUnidataContext>>({})\n\nlet unidata = {}\nlet dataState = {}\n\nexport const UnidataProvider = ({\n  initialData,\n  children,\n}: React.PropsWithChildren<IUnidataProviderProps>) => {\n  const [, forceUpdate] = useState()\n\n  const updateDataState = (newData: object) => {\n    dataState = generateDataState(dataState, newData)\n    forceUpdate(dataState)\n  }\n\n  useEffect(() => {\n    if (!isEqual(unidata, initialData)) {\n      updateDataState(initialData)\n    }\n  }, [initialData])\n\n  const initData = useCallback(\n    (value) => {\n      const newData = { ...value, ...unidata }\n      if (!isEqual(Object.keys(newData), Object.keys(unidata))) {\n        unidata = { ...value, ...unidata }\n        updateDataState(newData)\n      }\n    },\n    [dataState]\n  )\n\n  const put = (name: string, value: any): void => {\n    unidata[name] = Array.isArray(value) ? [...value] : value\n    updateDataState({ [name]: value })\n  }\n\n  const dataSetter = {\n    put,\n    add: (name: string, value: any): void => {\n      const d = unidata[name]\n\n      if (!Array.isArray(d)) {\n        put(name, value)\n      } else {\n        put(name, [...d, value])\n      }\n    },\n    remove: (name: string, filter: IFilterFn, forced = false): void => {\n      if (!filter && !forced) {\n        throw new Error(\n          'Filter is required for remove data. Unless you pass force = true'\n        )\n      }\n\n      const d = unidata[name]\n      if (!Array.isArray(d) || forced) {\n        delete d[name]\n\n        put(name, d)\n      } else {\n        const filterFn = getFilterFunction(filter)\n\n        put(\n          name,\n          d.filter((item, index) => !filterFn(item, index))\n        )\n      }\n    },\n    update: (name: string, filter: IFilterFn, value: any): void => {\n      if (!filter) throw new Error('Filter is required for update data')\n\n      const d = unidata[name]\n\n      if (!Array.isArray(d) || typeof value !== 'object') {\n        put(name, value)\n      } else {\n        const filterFn = getFilterFunction(filter)\n        const doUpdate = (i: any, v: any) =>\n          typeof i === 'object' ? { ...i, ...v } : v\n\n        put(\n          name,\n          d.map((item, index) =>\n            filterFn(item, index) ? doUpdate(item, value) : item\n          )\n        )\n      }\n    },\n  }\n  return (\n    <UnidataContext.Provider\n      value={{ data: unidata, dataState, dataSetter, initData }}\n    >\n      {children}\n    </UnidataContext.Provider>\n  )\n}\n\nexport const withUnidata = (initialData: object | undefined) => (\n  App: React.ElementType\n) => (props: React.Props<any>) => {\n  const [data, setData] = useState(initialData || {})\n  return (\n    <UnidataProvider initialData={data} setData={setData}>\n      <App {...props} />\n    </UnidataProvider>\n  )\n}\n","import mapValues from 'lodash/mapValues'\nimport values from 'lodash/values'\nimport pick from 'lodash/pick'\nimport React, { useContext, useEffect } from 'react'\nimport { UnidataContext } from './provider'\nimport { ISubscribedComponentProps } from './types'\n\nexport const useUnidata = (subscribed: object) => {\n  const { dataSetter, dataState = {}, data = {}, initData } = useContext(\n    UnidataContext\n  )\n\n  let changed = false\n  const subscribedData = mapValues(subscribed, (v, k) => {\n    if (data[k] !== undefined || data[k] === v) return data[k]\n    changed = true\n    return v\n  })\n\n  const subscribedState = pick(dataState, Object.keys(subscribed))\n\n  useEffect(() => {\n    if (changed && typeof initData === 'function') {\n      initData({ ...data, ...subscribedData })\n    }\n  }, [changed])\n\n  return [subscribedData, dataSetter, subscribedState]\n}\n\nexport const subscribe = (subscribed?: object) => (\n  WrappedComponent: React.ElementType\n) => (props: React.Props<any>) => {\n  const [data, dataSetter, subscribedState] = useUnidata(subscribed || {})\n  const parentProps = { ...props }\n  const deps = values(subscribedState).join('-')\n\n  const SubscribedComponent: React.ElementType<ISubscribedComponentProps> = () => (\n    <WrappedComponent data={data} dataSetter={dataSetter} {...parentProps} />\n  )\n  return React.useMemo(() => <SubscribedComponent deps={deps} />, [deps])\n}\n","import React from 'react'\nimport { subscribe } from '@datnq/unidata'\n\nconst Counter = ({ data }) => {\n  console.log('Rendered Counter')\n  return (\n    <span>\n      Completed: {data.todos.filter((t) => t.completed).length}/\n      {data.todos.length}\n    </span>\n  )\n}\n\nexport default subscribe({\n  todos: [],\n})(Counter)\n","import { required, minlen } from '@datnq/usemodel/dist/validators.ts'\nimport { Field } from '@datnq/usemodel'\n\nclass CheckboxField extends Field {\n  extractFromEvent(e) {\n    const {\n      target: { value, checked },\n    } = e\n    this.setValue(checked ? value : null)\n  }\n}\n\nexport default () => {\n  return {\n    content: {\n      label: 'Todo Content',\n      validators: [\n        { test: required(), errorMessage: '%(label)s is required' },\n        {\n          test: minlen(6),\n          errorMessage: '%(label)s must be longer than 6 characters',\n        },\n      ],\n    },\n    completed: {\n      label: 'Completed',\n      type: CheckboxField,\n    },\n  }\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useRef } from 'react'\nimport { useModel } from '@datnq/usemodel'\nimport { subscribe } from '@datnq/unidata'\nimport todoModel from './model/todos'\n\nconst AddTodo = ({ dataSetter }) => {\n  const inputRef = useRef(null)\n  const todo = useModel(todoModel)\n  const { content, completed } = todo\n\n  const change = (e) => {\n    todo.extractFromEvent(e)\n  }\n\n  const addtodo = (e) => {\n    e.preventDefault()\n    if (!todo.isValid) return\n    dataSetter.add('todos', todo.data)\n    todo.clearData()\n  }\n\n  console.log('Rendered Add Todo')\n\n  return (\n    <div>\n      <input\n        type='text'\n        ref={inputRef}\n        onChange={change}\n        name={content.name}\n        value={content.value}\n      />\n      <label>\n        <input\n          type='checkbox'\n          name={completed.name}\n          checked={completed.value === 'completed'}\n          value='completed'\n          onChange={change}\n        />{' '}\n        Completed\n      </label>\n      <button type='button' onClick={addtodo}>\n        Add todo\n      </button>\n      <br />\n      {content.isValid ? null : <p>{content.error.message}</p>}\n    </div>\n  )\n}\nexport default subscribe()(AddTodo)\n","import React from 'react'\nimport { subscribe } from '@datnq/unidata'\n\nconst TodoList = ({ data, dataSetter }) => {\n  const { todos } = data\n\n  const change = (e) => {\n    const {\n      target: { checked, value },\n    } = e\n    const index = parseInt(value, 10)\n    const updated = todos[index]\n    todos[index] = { ...updated, completed: checked }\n    dataSetter.put('todos', todos)\n  }\n\n  console.log('Rendered Todo list')\n\n  return (\n    <ol>\n      {todos.map((todo, id) => (\n        <li key={todo.content}>\n          <input\n            type='checkbox'\n            checked={todo.completed}\n            value={id}\n            onChange={change}\n          />\n          {todo.completed ? <s>{todo.content}</s> : todo.content}\n        </li>\n      ))}\n    </ol>\n  )\n}\nexport default subscribe({\n  todos: [],\n})(TodoList)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { withUnidata } from '@datnq/unidata'\n\nimport App from './App'\nimport './index.css'\n\nconst data = {}\nconst AppContainer = withUnidata(data)(App)\n\nReactDOM.render(<AppContainer />, document.getElementById('root'))\n","import React from 'react'\nimport Counter from './counter'\nimport AddTodo from './addTodo'\nimport TodoList from './todoList'\n\nexport default function App() {\n  return (\n    <>\n      <AddTodo />\n      <hr />\n      <Counter />\n      <TodoList />\n    </>\n  )\n}\n"],"sourceRoot":""}