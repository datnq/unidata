{"version":3,"sources":["../../src/utils.ts","../../src/provider.tsx","../../src/useUnidata.tsx","counter.js","model/todos.js","addTodo.js","todoList.js","index.js","App.js"],"names":["getFilterFunction","filter","item","Object","k","generateDataState","newData","mapValues","shortid","UnidataContext","createContext","UnidataProvider","children","unidata","useRef","data","state","initialData","useState","updateDataState","forceUpdate","initData","useCallback","isEqual","put","name","Array","value","dataSetter","add","d","remove","forced","Error","filterFn","update","i","v","subscribe","subscribed","WrappedComponent","props","useContext","changed","subscribedData","subscribedState","pick","useEffect","useUnidata","parentProps","deps","values","SubscribedComponent","todos","console","log","t","completed","length","CheckboxField","e","target","checked","this","setValue","Field","content","label","validators","test","required","errorMessage","minlen","type","inputRef","todo","useModel","todoModel","change","extractFromEvent","ref","onChange","onClick","preventDefault","isValid","clearData","error","message","newTodos","index","parseInt","updated","map","id","key","AppContainer","App","setData","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1ca52bb.chunk.js","sourcesContent":["import shortid from 'shortid'\nimport mapValues from 'lodash/mapValues'\nimport { IFilterFn } from './types'\n\nexport const getFilterFunction = (filter: IFilterFn): IFilterFn =>\n  typeof filter === 'function'\n    ? filter\n    : (item: any) =>\n        Object.keys(filter).every(\n          (k) => item[k] !== undefined && filter[k] === item[k]\n        )\n\nexport const generateDataState = (newData: object) => mapValues(newData, () => shortid.generate())\n","import React, { useState, useCallback, createContext, useRef } from 'react'\nimport isEqual from 'lodash/isEqual'\nimport { getFilterFunction, generateDataState } from './utils'\nimport { IUnidataProviderProps, IFilterFn, IUnidataContext, IUnidataRef } from './types'\n\nexport const UnidataContext = createContext<Partial<IUnidataContext>>({})\n\nexport const UnidataProvider = ({\n  initialData,\n  children,\n}: React.PropsWithChildren<IUnidataProviderProps>) => {\n  const unidata = useRef<IUnidataRef>({ data: initialData, state: generateDataState(initialData) })\n  const [, forceUpdate] = useState(unidata.current.state)\n\n  const updateDataState = (newData: object) => {\n    unidata.current.state = { ...unidata.current.state, ...generateDataState(newData) }\n    forceUpdate(unidata.current.state)\n  }\n\n  const initData = useCallback(\n    (data) => {\n      const newData = { ...data, ...unidata.current.data }\n      if (!isEqual(Object.keys(newData), Object.keys(unidata.current.data))) {\n        unidata.current.data = { ...data, ...unidata.current.data }\n        updateDataState(newData)\n      }\n    },\n    []\n  )\n\n  const put = (name: string, value: any): void => {\n    if (!isEqual(unidata.current.data[name], value) || !unidata.current.state[name]) {\n      unidata.current.data[name] = Array.isArray(value) ? [...value] : value\n      updateDataState({ [name]: value })\n    }\n  }\n\n  const add = (name: string, value: any): void => {\n    const d = unidata.current.data[name]\n\n    if (!Array.isArray(d)) {\n      put(name, value)\n    } else {\n      put(name, [...d, value])\n    }\n  }\n  const remove = (name: string, filter: IFilterFn, forced = false): void => {\n    if (!filter && !forced) {\n      throw new Error(\n        'Filter is required for remove data. Unless you pass force = true'\n      )\n    }\n\n    const d = unidata.current.data[name]\n    if (!Array.isArray(d) || forced) {\n      delete d[name]\n\n      put(name, d)\n    } else {\n      const filterFn = getFilterFunction(filter)\n\n      put(\n        name,\n        d.filter((item, index) => !filterFn(item, index))\n      )\n    }\n  }\n  const update = (name: string, filter: IFilterFn, value: any): void => {\n    if (!filter) throw new Error('Filter is required for update data')\n\n    const d = unidata.current.data[name]\n\n    if (!Array.isArray(d) || typeof value !== 'object') {\n      put(name, value)\n    } else {\n      const filterFn = getFilterFunction(filter)\n      const doUpdate = (i: any, v: any) =>\n        typeof i === 'object' ? { ...i, ...v } : v\n\n      put(\n        name,\n        d.map((item, index) =>\n          filterFn(item, index) ? doUpdate(item, value) : item\n        )\n      )\n    }\n  }\n\n  return (\n    <UnidataContext.Provider\n      value={{\n        ...unidata.current, initData, dataSetter: {\n          put,\n          add,\n          remove,\n          update\n        }\n      }}\n    >\n      {children}\n    </UnidataContext.Provider>\n  )\n}\n\nexport const withUnidata = (initialData: object | undefined) => (\n  App: React.ElementType\n) => (props: React.Props<any>) => {\n  const [data, setData] = useState(initialData || {})\n  return (\n    <UnidataProvider initialData={data} setData={setData}>\n      <App {...props} />\n    </UnidataProvider>\n  )\n}\n","import mapValues from 'lodash/mapValues'\nimport values from 'lodash/values'\nimport pick from 'lodash/pick'\nimport React, { useContext, useEffect } from 'react'\nimport { UnidataContext } from './provider'\nimport { ISubscribedComponentProps } from './types'\n\nexport const useUnidata = (subscribed: object) => {\n  const { dataSetter, state = {}, data = {}, initData } = useContext(\n    UnidataContext\n  )\n\n  let changed = false\n  const subscribedData = mapValues(subscribed, (v, k) => {\n    if (data[k] !== undefined || data[k] === v) return data[k]\n    changed = true\n    return v\n  })\n\n  const subscribedState = pick(state, Object.keys(subscribed))\n\n  useEffect(() => {\n    if (changed && typeof initData === 'function') {\n      initData({ ...data, ...subscribedData })\n    }\n  }, [changed])\n\n  return [subscribedData, dataSetter, subscribedState]\n}\n\nexport const subscribe = (subscribed?: object) => (\n  WrappedComponent: React.ElementType\n) => (props: React.Props<any>) => {\n  const [data, dataSetter, subscribedState] = useUnidata(subscribed || {})\n  const parentProps = { ...props }\n  const deps = values(subscribedState).join('-')\n\n  const SubscribedComponent: React.ElementType<ISubscribedComponentProps> = () => (\n    <WrappedComponent data={data} dataSetter={dataSetter} {...parentProps} />\n  )\n  return React.useMemo(() => <SubscribedComponent deps={deps} />, [deps])\n}\n","import React from 'react'\nimport { subscribe } from '@datnq/unidata'\n\nconst Counter = ({ data }) => {\n  console.log('Rendered Counter')\n  return (\n    <span>\n      Completed: {data.todos.filter((t) => t.completed).length}/\n      {data.todos.length}\n    </span>\n  )\n}\n\nexport default subscribe({\n  todos: [],\n})(Counter)\n","import { required, minlen } from '@datnq/usemodel/dist/validators.ts'\nimport { Field } from '@datnq/usemodel'\n\nclass CheckboxField extends Field {\n  extractFromEvent(e) {\n    const {\n      target: { value, checked },\n    } = e\n    this.setValue(checked ? value : null)\n  }\n}\n\nexport default () => {\n  return {\n    content: {\n      label: 'Todo Content',\n      validators: [\n        { test: required(), errorMessage: '%(label)s is required' },\n        {\n          test: minlen(6),\n          errorMessage: '%(label)s must be longer than 6 characters',\n        },\n      ],\n    },\n    completed: {\n      label: 'Completed',\n      type: CheckboxField,\n    },\n  }\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useRef } from 'react'\nimport { useModel } from '@datnq/usemodel'\nimport { subscribe } from '@datnq/unidata'\nimport todoModel from './model/todos'\n\nconst AddTodo = ({ dataSetter }) => {\n  const inputRef = useRef(null)\n  const todo = useModel(todoModel)\n  const { content, completed } = todo\n\n  const change = (e) => {\n    todo.extractFromEvent(e)\n  }\n\n  const addtodo = (e) => {\n    e.preventDefault()\n    if (!todo.isValid) return\n    dataSetter.add('todos', todo.data)\n    todo.clearData()\n  }\n\n  console.log('Rendered Add Todo')\n\n  return (\n    <div>\n      <input\n        type='text'\n        ref={inputRef}\n        onChange={change}\n        name={content.name}\n        value={content.value}\n      />\n      <label>\n        <input\n          type='checkbox'\n          name={completed.name}\n          checked={completed.value === 'completed'}\n          value='completed'\n          onChange={change}\n        />{' '}\n        Completed\n      </label>\n      <button type='button' onClick={addtodo}>\n        Add todo\n      </button>\n      <br />\n      {content.isValid ? null : <p>{content.error.message}</p>}\n    </div>\n  )\n}\nexport default subscribe()(AddTodo)\n","import React from 'react'\nimport { subscribe } from '@datnq/unidata'\n\nconst TodoList = ({ data, dataSetter }) => {\n  const { todos } = data\n\n  const change = (e) => {\n    const {\n      target: { checked, value },\n    } = e\n    const newTodos = [...todos]\n    const index = parseInt(value, 10)\n    const updated = todos[index]\n    newTodos[index] = { ...updated, completed: checked }\n    dataSetter.put('todos', newTodos)\n  }\n\n  console.log('Rendered Todo list')\n\n  return (\n    <ol>\n      {todos.map((todo, id) => (\n        <li key={todo.content}>\n          <input\n            type='checkbox'\n            checked={todo.completed}\n            value={id}\n            onChange={change}\n          />\n          {todo.completed ? <s>{todo.content}</s> : todo.content}\n        </li>\n      ))}\n    </ol>\n  )\n}\nexport default subscribe({\n  todos: [],\n})(TodoList)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { withUnidata } from '@datnq/unidata'\n\nimport App from './App'\nimport './index.css'\n\nconst data = {}\nconst AppContainer = withUnidata(data)(App)\n\nReactDOM.render(<AppContainer />, document.getElementById('root'))\n","import React from 'react'\nimport Counter from './counter'\nimport AddTodo from './addTodo'\nimport TodoList from './todoList'\n\nexport default function App() {\n  return (\n    <>\n      <AddTodo />\n      <hr />\n      <Counter />\n      <TodoList />\n    </>\n  )\n}\n"],"sourceRoot":""}