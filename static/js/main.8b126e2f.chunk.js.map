{"version":3,"sources":["../../src/utils.ts","../../src/reducer.ts","../../src/provider.tsx","../../src/useUnidata.tsx","logger.js","counter.js","model/todos.js","addTodo.js","todoList.js","unrelatedCounter.js","App.js","index.js"],"names":["getFilterFunction","filter","Object","item","generateDataState","shortid","getDisplayName","Component","initializer","initialData","data","state","updater","unidata","reducer","type","action","name","value","forced","d","newData","put","Array","Error","filterFn","i","UnidataContext","createContext","store","dispatch","UnidataProvider","children","useReducer","subscribe","subscribed","MemoizedUnidataComponent","props","useContext","changedData","subscribedData","dispatcher","add","update","remove","useEffect","useUnidata","parentProps","deps","SubscribedComponent","React","createLogger","content","id","generate","logs","map","log","key","Counter","this","todos","t","completed","length","PureComponent","CheckboxField","e","target","checked","setValue","Field","label","validators","test","required","errorMessage","minlen","inputRef","useRef","todo","useModel","todoModel","change","extractFromEvent","ref","onChange","onClick","preventDefault","isValid","clearData","error","message","newTodos","index","parseInt","updated","counter","increase","useCallback","App","colStyles","padding","flexGrow","width","position","style","display","height","alignItems","href","right","top","src","class","alt","data-recalc-dims","color","backgroundColor","overflowY","boxShadow","ReactDOM","render","document","getElementById"],"mappings":"8eAIO,IAAMA,EAAoB,SAACC,GAAD,MACb,oBAAXA,EAAP,EAEI,mBACEC,OAAA,eACE,wBAAOC,UAAyBF,OAAcE,EAA9C,QAGGC,EAAoB,SAAC,GAAD,OAG/B,OAAmB,kBAAMC,IAAN,eAERC,EAAiB,SAAC,EAAD,GAI5B,YACGC,eACAA,EADAA,MADH,cCjBWC,EAAc,SAACC,GAC1B,MAAO,CAAEC,KAAF,EAAqBC,MAAOP,EAAkBK,KAGjDG,EAAU,SAACC,EAAD,GACd,MAAO,CACLH,KAAM,EAAF,GACCG,EADD,QADC,GAKLF,MAAO,EAAF,GACAE,EADA,SAEAT,EAFA,MAOIU,EAAU,SAACD,EAAD,G,IACbE,EAA4CC,EAA5CD,KAAME,EAAsCD,EAAtCC,KAAMC,EAAgCF,EAAhCE,MAAOjB,EAAyBe,EAAzBf,OAAQkB,EAAiBH,EAAjBG,OAAQT,EAASM,EAATN,KACrCU,EAAIP,OAAV,GACMQ,EAAU,EAAH,QAAiBR,EAA9B,MAEMS,EAAM,SAACL,EAAD,gBACT,IAAQJ,OAAR,GAAD,IAAwCA,QAAxC,GADU,EAEND,EAAQC,IAAD,SAAoBU,8BAApB,EADX,KAIF,UACE,WACE,OAAQ,IAAQrB,YAAR,GAA8BA,YAAYW,EAA3C,OAAP,EACID,EAAQC,EADL,GAGT,UACE,OAAOS,EAAIL,EAAX,GACF,UACE,OAAKM,cAAL,GAGSD,EAAIL,EAAM,GAAP,UAAV,KAFOK,EAAIL,EAAX,GAIJ,aACE,MAAa,MAAM,IAAIO,MAAV,sCAEb,GAAKD,cAAD,IAAJ,kBAAgCL,EAEzB,CACL,IAAMO,EAAWzB,EAAjB,GAIA,OAAOsB,EAAI,EAETF,EAAA,KAAM,qBACJK,EAAStB,EAATsB,IANa,EAMbA,EALW,kBADGC,EAMmBvB,GALX,EAAxB,WADe,GAKT,EALS,IAACuB,EAAD,MAHjB,OAAOJ,EAAIL,EAAX,GAaJ,aACE,IAAKhB,IAAL,EACE,MAAM,IAAIuB,MAAV,oEAKF,IAAKD,cAAD,IAAJ,EAGE,cAFOH,EAAP,GAEOE,EAAIL,EAAX,GAEA,IAAMQ,EAAWzB,EAAjB,GAEA,OAAOsB,EAAI,EAETF,EAAA,QAAS,qBAAkBK,EAAStB,EAA3B,OAGf,QACE,MAAM,IAAN,QC5EOwB,EAAiBC,wBAAkC,CAC9DC,MAAO,CACLnB,KADK,GAELC,MAAO,IAGTmB,SAAU,eAEZH,+BAMA,IAAaI,EAAkB,SAAC,G,IAC9BtB,gBACAuB,a,EAE0BC,qBAAW,EAAD,KAA7BJ,OAAOC,OAEd,OACE,kBAACH,EAAD,UAAyBT,MAAO,CAAEW,MAAF,EAASC,aAD3C,ICyCWI,EAAY,SAACC,GAAD,OAAiC,YAGxD,IAAMC,EAA2B,SAACC,G,MArDV,SAAC,QACzBF,UAA6B,I,MAEDG,qBAAWX,GAA/BG,aAAUD,UACVnB,EAAgBmB,EAAhBnB,KAAMC,EAAUkB,EAAVlB,MAER4B,EAAN,GACMC,EAAiB,OAAsB,cAC3C,YAAI9B,UAAyBA,OAA7B,EAAmDA,EAAP,IAC5C6B,OACA,MAKI1B,EAAU,CACdH,KADc,EAEdC,MAJsB,MAAYT,YAApC,KAOMuC,EAAa,CACjBnB,IAAK,qBAA8BQ,EAAS,CAAEf,KAAF,MAAeE,KAAf,EAAqBC,WACjEwB,IAAK,qBAA8BZ,EAAS,CAAEf,KAAF,MAAeE,KAAf,EAAqBC,WACjEyB,OAAQ,uBACNb,EAAS,CAAEf,KAAF,SAAkBE,KAAlB,EAAwBC,MAAxB,EAA+BjB,YAC1C2C,OAAQ,gCAAiCzB,OAAjC,GACNW,EAAS,CACPf,KADO,SAEPd,OAFO,EAGPgB,KAHO,EAIPE,aAaN,OATA0B,qBAAU,WACJ3C,YAAJ,IACE4B,EAAS,CACPf,KADO,OAEPL,KAAM6B,MAGT,CAACA,EAAa7B,EAAMoB,EAPvBe,IASO,CAAChC,EAAR,GAWgCiC,CAAWX,GAAD,IAAjCtB,OAAS4B,OACVM,EAAc,EAAH,GAAjB,GACMC,EAAO,IAAOnC,EAAP,YAAb,KAEMoC,EAAmE,kBACvEC,mCACExC,KAAMG,EAAQH,KACd+B,WAAYA,GAHyD,KAWzE,OAJAQ,cAAkC3C,EAAe,oBAAjD2C,GAIO,aAAc,kBAAM,qBAAqBD,KAAMA,MAAU,CAAhE,KAMF,OAJAZ,cAAuC9B,EAAe,kBAAtD8B,GAIA,I,yDCvFWe,EAAe,SAACV,GAAD,OAAgB,SAACW,GAC3CX,EAAWC,IAAI,OAAQ,CAAEU,UAASC,GAAIhD,IAAQiD,eAGjCpB,IAAU,CAAEqB,KAAM,IAAlBrB,EAAwB,YAAe,IAC5CqB,EAD2C,EAAX7C,KAChC6C,KACR,OACEA,GACE,4BACGA,EAAKC,KAAI,SAACC,GAAD,OACR,wBAAIC,IAAKD,EAAIJ,IAAKI,EAAIL,gBCV1BO,E,mLAEFC,KAAKH,IAAMN,EAAaS,KAAKvB,MAAMI,c,+BAGnCmB,KAAKH,KAAOG,KAAKH,IAAI,0BADd,IAEC/C,EAASkD,KAAKvB,MAAd3B,KACR,OACE,4CACcA,EAAKmD,MAAM5D,QAAO,SAAC6D,GAAD,OAAOA,EAAEC,aAAWC,OADpD,IAEGtD,EAAKmD,MAAMG,Y,GAVEd,IAAMe,eAgBb/B,IAAU,CACvB2B,MAAO,IADM3B,CAEZyB,G,gBCnBGO,E,+KACaC,GAAI,IAAD,EAGdA,EADFC,OAAUlD,EAFM,EAENA,MAAOmD,EAFD,EAECA,QAEnBT,KAAKU,SAASD,EAAUnD,EAAQ,U,GALRqD,KASb,aACb,MAAO,CACLnB,QAAS,CACPoB,MAAO,eACPC,WAAY,CACV,CAAEC,KAAMC,qBAAYC,aAAc,yBAClC,CACEF,KAAMG,iBAAO,GACbD,aAAc,gDAIpBb,UAAW,CACTS,MAAO,YACPzD,KAAMmD,KC8BGhC,OAjDC,SAAC,GAAoB,IAAlBO,EAAiB,EAAjBA,WACXgB,EAAMN,EAAaV,GAEnBqC,EAAWC,iBAAO,MAClBC,EAAOC,YAASC,GACd9B,EAAuB4B,EAAvB5B,QAASW,EAAciB,EAAdjB,UAEXoB,EAAS,SAAChB,GACda,EAAKI,iBAAiBjB,IAcxB,OAJAtB,qBAAU,WACRY,EAAI,yBAIJ,6BACE,2BACE1C,KAAK,OACLsE,IAAKP,EACLQ,SAAUH,EACVlE,KAAMmC,EAAQnC,KACdC,MAAOkC,EAAQlC,QAEjB,+BACE,2BACEH,KAAK,WACLE,KAAM8C,EAAU9C,KAChBoD,QAA6B,cAApBN,EAAU7C,MACnBA,MAAM,YACNoE,SAAUH,IACT,IAPL,aAUA,4BAAQpE,KAAK,SAASwE,QA9BV,SAACpB,GACfA,EAAEqB,iBACGR,EAAKS,UACVhD,EAAWC,IAAI,QAASsC,EAAKtE,MAC7BsE,EAAKU,eA0BH,YAGA,6BACCtC,EAAQqC,QAAU,KAAO,2BAAIrC,EAAQuC,MAAMC,a,QCZnC1D,IAAU,CACvB2B,MAAO,IADM3B,EApCE,SAAC,GAA0B,IAAxBxB,EAAuB,EAAvBA,KAAM+B,EAAiB,EAAjBA,WAChBoB,EAAUnD,EAAVmD,MAEFJ,EAAMN,EAAaV,GAEnB0C,EAAS,SAAChB,GAAO,IAAD,EAGhBA,EADFC,OAAUC,EAFQ,EAERA,QAASnD,EAFD,EAECA,MAEf2E,EAAQ,YAAOhC,GACfiC,EAAQC,SAAS7E,EAAO,IACxB8E,EAAUnC,EAAMiC,GACtBD,EAASC,GAAT,eAAuBE,EAAvB,CAAgCjC,UAAWM,IAC3C5B,EAAWnB,IAAI,QAASuE,IAO1B,OAJAhD,qBAAU,WACRY,EAAI,0BAIJ,4BACGI,EAAML,KAAI,SAACwB,EAAM3B,GAAP,OACT,wBAAIK,IAAKsB,EAAK5B,SACZ,2BACErC,KAAK,WACLsD,QAASW,EAAKjB,UACd7C,MAAOmC,EACPiC,SAAUH,IAEXH,EAAKjB,UAAY,2BAAIiB,EAAK5B,SAAe4B,EAAK5B,gBC9B1ClB,IAAU,CAAE+D,QAAS,GAArB/D,EAA0B,YAA2B,IAAxBxB,EAAuB,EAAvBA,KAAM+B,EAAiB,EAAjBA,WAC1CgB,EAAMN,EAAaV,GAEnByD,EAAWC,uBAAY,WAC3B1D,EAAWnB,IAAI,UAAWZ,EAAKuF,QAAU,KACxC,CAACvF,EAAKuF,QAASxD,IAMlB,OAJAI,qBAAU,WACRY,EAAI,kCAIJ,2BACG/C,EAAKuF,QAAS,IACf,4BAAQlF,KAAK,SAASwE,QAASW,GAA/B,kBCXS,SAASE,IACtB,IAAMC,EAAY,CAChBC,QAAS,OACTC,SAAU,EACVC,MAAO,MACPC,SAAU,YAEZ,OACE,oCACE,yBAAKC,MAAO,CAAEC,QAAS,OAAQC,OAAQ,QAASC,WAAY,YAC1D,yBAAKH,MAAOL,GACV,uBACES,KAAK,yBACLJ,MAAO,CAAED,SAAU,WAAYM,MAAO,EAAGC,IAAK,IAE9C,yBACER,MAAM,MACNI,OAAO,MACPK,IAAI,mGACJC,MAAM,4BACNC,IAAI,oBACJC,mBAAiB,OAGrB,kBAAC,EAAD,MACA,6BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,yBACEV,MAAK,eACAL,EADA,CAEHgB,MAAO,OACPC,gBAAiB,OACjBC,UAAW,SACXC,UAAW,mCAGb,gDACA,kBAAC,EAAD,S,OCpCVC,IAASC,OACP,kBAAC,EAAD,CAAiBjH,YALN,CACX8C,KAAM,KAKJ,kBAAC6C,EAAD,OAEFuB,SAASC,eAAe,U","file":"static/js/main.8b126e2f.chunk.js","sourcesContent":["import shortid from 'shortid'\nimport { mapValues } from 'lodash'\nimport { FilterFn, DataCollection, DataStateCollection } from './types'\n\nexport const getFilterFunction = (filter: FilterFn): FilterFn =>\n  typeof filter === 'function'\n    ? filter\n    : (item: any) =>\n        Object.keys(filter).every(\n          (k) => item[k] !== undefined && filter[k] === item[k]\n        )\n\nexport const generateDataState = (\n  newData: DataCollection\n): DataStateCollection =>\n  mapValues(newData, () => shortid.generate()) as DataStateCollection\n\nexport const getDisplayName = (\n  prefix: string,\n  Component: React.ElementType\n) => {\n  return `${prefix}${\n    (Component as React.FC).displayName ||\n    (Component as React.FC).name ||\n    'Component'\n  }`\n}\n","import { isEqual } from 'lodash'\nimport { DataCollection, UnidataType } from './types'\nimport { generateDataState, getFilterFunction } from './utils'\n\nexport const initializer = (initialData: DataCollection) => {\n  return { data: initialData, state: generateDataState(initialData) }\n}\n\nconst updater = (unidata: UnidataType, newData: DataCollection) => {\n  return {\n    data: {\n      ...unidata.data,\n      ...newData,\n    },\n    state: {\n      ...unidata.state,\n      ...generateDataState(newData),\n    },\n  }\n}\n\nexport const reducer = (unidata: UnidataType, action: any): UnidataType => {\n  const { type, name, value, filter, forced, data } = action\n  const d = unidata.data[name]\n  const newData = { ...data, ...unidata.data }\n\n  const put = (name: string, value: any) =>\n    !isEqual(unidata.data[name], value) || !unidata.state[name]\n      ? updater(unidata, { [name]: Array.isArray(value) ? [...value] : value })\n      : unidata\n\n  switch (type) {\n    case 'init':\n      return !isEqual(Object.keys(newData), Object.keys(unidata.data))\n        ? updater(unidata, newData)\n        : unidata\n    case 'put':\n      return put(name, value)\n    case 'add':\n      if (!Array.isArray(d)) {\n        return put(name, value)\n      } else {\n        return put(name, [...d, value])\n      }\n    case 'update':\n      if (!filter) throw new Error('Filter is required for update data')\n\n      if (!Array.isArray(d) || typeof value !== 'object') {\n        return put(name, value)\n      } else {\n        const filterFn = getFilterFunction(filter)\n        const doUpdate = (i: any, v: any) =>\n          typeof i === 'object' ? { ...i, ...v } : v\n\n        return put(\n          name,\n          d.map((item, index) =>\n            filterFn(item, index) ? doUpdate(item, value) : item\n          )\n        )\n      }\n    case 'remove':\n      if (!filter && !forced) {\n        throw new Error(\n          'Filter is required for remove data. Unless you pass force = true'\n        )\n      }\n\n      if (!Array.isArray(d) || forced) {\n        delete d[name]\n\n        return put(name, d)\n      } else {\n        const filterFn = getFilterFunction(filter)\n\n        return put(\n          name,\n          d.filter((item, index) => !filterFn(item, index))\n        )\n      }\n    default:\n      throw new Error()\n  }\n}\n","import React, { createContext, PropsWithChildren, useReducer } from 'react'\n\nimport { UnidataProviderProps, UnidataContextType } from './types'\nimport { reducer, initializer } from './reducer'\n\nexport const UnidataContext = createContext<UnidataContextType>({\n  store: {\n    data: {},\n    state: {},\n  },\n\n  dispatch: () => {},\n})\nUnidataContext.displayName = 'UnidataContext'\n\n/**\n * Wrapper of UnidataContext.Provider\n * @param {UnidataProviderProps} props\n */\nexport const UnidataProvider = ({\n  initialData,\n  children,\n}: PropsWithChildren<UnidataProviderProps>) => {\n  const [store, dispatch] = useReducer(reducer, initialData, initializer)\n\n  return (\n    <UnidataContext.Provider value={{ store, dispatch }}>\n      {children}\n    </UnidataContext.Provider>\n  )\n}\n","import { mapValues, values, pick } from 'lodash'\nimport React, { useContext, useEffect } from 'react'\nimport { UnidataContext } from './provider'\nimport {\n  SubscribedComponentProps,\n  DataCollection,\n  FilterFn,\n  UnidataType,\n  Dispatcher,\n} from './types'\nimport { getDisplayName } from './utils'\n\n/**\n * Hooks to return data the Component is listening to, state key, and data setter functions\n * @param {DataCollection} subscribed Data which the component want to subscribe to. { name: defaultValue }\n */\nexport const useUnidata = (\n  subscribed: DataCollection = {}\n): [UnidataType, Dispatcher] => {\n  const { dispatch, store } = useContext(UnidataContext)\n  const { data, state } = store\n\n  const changedData: DataCollection = {}\n  const subscribedData = mapValues(subscribed, (v, k) => {\n    if (data[k] !== undefined || data[k] === v) return data[k]\n    changedData[k] = v\n    return v\n  })\n\n  const subscribedState = pick(state, Object.keys(subscribed))\n\n  const unidata = {\n    data: subscribedData,\n    state: subscribedState,\n  }\n\n  const dispatcher = {\n    put: (name: string, value: any) => dispatch({ type: 'put', name, value }),\n    add: (name: string, value: any) => dispatch({ type: 'add', name, value }),\n    update: (name: string, filter: FilterFn, value: any) =>\n      dispatch({ type: 'update', name, value, filter }),\n    remove: (name: string, filter: FilterFn, forced = false) =>\n      dispatch({\n        type: 'remove',\n        filter,\n        name,\n        forced,\n      }),\n  }\n\n  useEffect(() => {\n    if (Object.keys(changedData)) {\n      dispatch({\n        type: 'init',\n        data: changedData,\n      })\n    }\n  }, [changedData, data, dispatch, subscribedData])\n\n  return [unidata, dispatcher]\n}\n\n/**\n * Subscribe this component to specific data. Once those data change, Component will be rerender\n * @param {DataCollection} subscribed Data which the component want to subscribe to. { name: defaultValue }\n */\nexport const subscribe = (subscribed?: DataCollection) => (\n  WrappedComponent: React.ElementType\n) => {\n  const MemoizedUnidataComponent = (props: object): JSX.Element => {\n    const [unidata, dispatcher] = useUnidata(subscribed || {})\n    const parentProps = { ...props }\n    const deps = values(unidata.state).join('-')\n\n    const SubscribedComponent: React.ElementType<SubscribedComponentProps> = () => (\n      <WrappedComponent\n        data={unidata.data}\n        dispatcher={dispatcher}\n        {...parentProps}\n      />\n    )\n    SubscribedComponent.displayName = getDisplayName(\n      'UnidataSubscribed',\n      WrappedComponent\n    )\n    return React.useMemo(() => <SubscribedComponent deps={deps} />, [deps])\n  }\n  MemoizedUnidataComponent.displayName = getDisplayName(\n    'UnidataMemoized',\n    WrappedComponent\n  )\n  return MemoizedUnidataComponent\n}\n","import React from 'react'\nimport { subscribe } from '@datnq/unidata'\nimport shortid from 'shortid'\n\nexport const createLogger = (dispatcher) => (content) => {\n  dispatcher.add('logs', { content, id: shortid.generate() })\n}\n\nexport default subscribe({ logs: [] })(({ data }) => {\n  const { logs } = data\n  return (\n    logs && (\n      <ol>\n        {logs.map((log) => (\n          <li key={log.id}>{log.content}</li>\n        ))}\n      </ol>\n    )\n  )\n})\n","import React from 'react'\nimport { subscribe } from '@datnq/unidata'\nimport { createLogger } from './logger'\n\nclass Counter extends React.PureComponent {\n  componentDidUpdate() {\n    this.log = createLogger(this.props.dispatcher)\n  }\n  render() {\n    this.log && this.log('Rendering Todo Counter')\n    const { data } = this.props\n    return (\n      <span>\n        Completed: {data.todos.filter((t) => t.completed).length}/\n        {data.todos.length}\n      </span>\n    )\n  }\n}\n\nexport default subscribe({\n  todos: [],\n})(Counter)\n","import { required, minlen } from '@datnq/usemodel/dist/validators.ts'\nimport { Field } from '@datnq/usemodel'\n\nclass CheckboxField extends Field {\n  extractFromEvent(e) {\n    const {\n      target: { value, checked },\n    } = e\n    this.setValue(checked ? value : null)\n  }\n}\n\nexport default () => {\n  return {\n    content: {\n      label: 'Todo Content',\n      validators: [\n        { test: required(), errorMessage: '%(label)s is required' },\n        {\n          test: minlen(6),\n          errorMessage: '%(label)s must be longer than 6 characters',\n        },\n      ],\n    },\n    completed: {\n      label: 'Completed',\n      type: CheckboxField,\n    },\n  }\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useRef, useEffect } from 'react'\nimport { useModel } from '@datnq/usemodel'\nimport { subscribe } from '@datnq/unidata'\nimport todoModel from './model/todos'\nimport { createLogger } from './logger'\n\nconst AddTodo = ({ dispatcher }) => {\n  const log = createLogger(dispatcher)\n\n  const inputRef = useRef(null)\n  const todo = useModel(todoModel)\n  const { content, completed } = todo\n\n  const change = (e) => {\n    todo.extractFromEvent(e)\n  }\n\n  const addtodo = (e) => {\n    e.preventDefault()\n    if (!todo.isValid) return\n    dispatcher.add('todos', todo.data)\n    todo.clearData()\n  }\n\n  useEffect(() => {\n    log('Rendering Add Todo')\n  })\n\n  return (\n    <div>\n      <input\n        type='text'\n        ref={inputRef}\n        onChange={change}\n        name={content.name}\n        value={content.value}\n      />\n      <label>\n        <input\n          type='checkbox'\n          name={completed.name}\n          checked={completed.value === 'completed'}\n          value='completed'\n          onChange={change}\n        />{' '}\n        Completed\n      </label>\n      <button type='button' onClick={addtodo}>\n        Add todo\n      </button>\n      <br />\n      {content.isValid ? null : <p>{content.error.message}</p>}\n    </div>\n  )\n}\nexport default subscribe()(AddTodo)\n","import React, { useEffect } from 'react'\nimport { subscribe } from '@datnq/unidata'\nimport { createLogger } from './logger'\n\nconst TodoList = ({ data, dispatcher }) => {\n  const { todos } = data\n\n  const log = createLogger(dispatcher)\n\n  const change = (e) => {\n    const {\n      target: { checked, value },\n    } = e\n    const newTodos = [...todos]\n    const index = parseInt(value, 10)\n    const updated = todos[index]\n    newTodos[index] = { ...updated, completed: checked }\n    dispatcher.put('todos', newTodos)\n  }\n\n  useEffect(() => {\n    log('Rendering Todo list')\n  })\n\n  return (\n    <ol>\n      {todos.map((todo, id) => (\n        <li key={todo.content}>\n          <input\n            type='checkbox'\n            checked={todo.completed}\n            value={id}\n            onChange={change}\n          />\n          {todo.completed ? <s>{todo.content}</s> : todo.content}\n        </li>\n      ))}\n    </ol>\n  )\n}\nexport default subscribe({\n  todos: [],\n})(TodoList)\n","import React, { useCallback, useEffect } from 'react'\nimport { subscribe } from '@datnq/unidata'\nimport { createLogger } from './logger'\n\nexport default subscribe({ counter: 0 })(({ data, dispatcher }) => {\n  const log = createLogger(dispatcher)\n\n  const increase = useCallback(() => {\n    dispatcher.put('counter', data.counter + 1)\n  }, [data.counter, dispatcher])\n\n  useEffect(() => {\n    log('Rendering Unrelated counter')\n  })\n\n  return (\n    <p>\n      {data.counter}{' '}\n      <button type='button' onClick={increase}>\n        + Increase\n      </button>\n    </p>\n  )\n})\n","import React from 'react'\nimport Counter from './counter'\nimport AddTodo from './addTodo'\nimport TodoList from './todoList'\nimport UnrelatedCounter from './unrelatedCounter'\nimport Logger from './logger'\n\nexport default function App() {\n  const colStyles = {\n    padding: '20px',\n    flexGrow: 1,\n    width: '50%',\n    position: 'relative',\n  }\n  return (\n    <>\n      <div style={{ display: 'flex', height: '100vh', alignItems: 'stretch' }}>\n        <div style={colStyles}>\n          <a\n            href='https://github.com/you'\n            style={{ position: 'absolute', right: 0, top: 0 }}\n          >\n            <img\n              width='149'\n              height='149'\n              src='https://github.blog/wp-content/uploads/2008/12/forkme_right_darkblue_121621.png?resize=149%2C149'\n              class='attachment-full size-full'\n              alt='Fork me on GitHub'\n              data-recalc-dims='1'\n            />\n          </a>\n          <AddTodo />\n          <hr />\n          <Counter />\n          <UnrelatedCounter />\n          <TodoList />\n        </div>\n        <div\n          style={{\n            ...colStyles,\n            color: '#fff',\n            backgroundColor: '#333',\n            overflowY: 'scroll',\n            boxShadow: 'inset 0 0 20px rgba(0,0,0,.4)',\n          }}\n        >\n          <h2>Rendering logger</h2>\n          <Logger />\n        </div>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { UnidataProvider } from '@datnq/unidata'\n\nimport App from './App'\nimport './index.css'\n\nconst data = {\n  logs: [],\n}\n\nReactDOM.render(\n  <UnidataProvider initialData={data}>\n    <App />\n  </UnidataProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}